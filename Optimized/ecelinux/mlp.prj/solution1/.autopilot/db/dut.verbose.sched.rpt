

================================================================
== Vivado HLS Report for 'dut'
================================================================
* Date:           Mon Dec  2 09:46:49 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        mlp.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.670 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   189971|   189971| 1.900 ms | 1.900 ms |  189971|  189971|   none  |
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       18|       18|         2|          -|          -|     9|    no    |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%tmp_V = alloca i27"   --->   Operation 7 'alloca' 'tmp_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tmp_V_2 = alloca i27"   --->   Operation 8 'alloca' 'tmp_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%tmp_V_3 = alloca i27"   --->   Operation 9 'alloca' 'tmp_V_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp_V_4 = alloca i27"   --->   Operation 10 'alloca' 'tmp_V_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp_V_5 = alloca i27"   --->   Operation 11 'alloca' 'tmp_V_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_V_6 = alloca i27"   --->   Operation 12 'alloca' 'tmp_V_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_V_7 = alloca i27"   --->   Operation 13 'alloca' 'tmp_V_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_V_8 = alloca i27"   --->   Operation 14 'alloca' 'tmp_V_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_V_9 = alloca i27"   --->   Operation 15 'alloca' 'tmp_V_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i27* %strm_out_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str162, i32 0, i32 0, [1 x i8]* @p_str163, [1 x i8]* @p_str164, [1 x i8]* @p_str165, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str166, [1 x i8]* @p_str167)"   --->   Operation 16 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecInterface(i27* %strm_in_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str156, i32 0, i32 0, [1 x i8]* @p_str157, [1 x i8]* @p_str158, [1 x i8]* @p_str159, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str160, [1 x i8]* @p_str161)"   --->   Operation 17 'specinterface' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i27* %strm_in_V_V), !map !170"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i27* %strm_out_V_V), !map !174"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @dut_str) nounwind"   --->   Operation 20 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.76ns)   --->   "br label %.preheader" [mlp.cpp:23]   --->   Operation 21 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.63>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ 0, %.preheader.preheader ], [ %i, %.preheader.backedge ]"   --->   Operation 22 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.30ns)   --->   "%icmp_ln23 = icmp eq i4 %i_0, -7" [mlp.cpp:23]   --->   Operation 23 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)"   --->   Operation 24 'speclooptripcount' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.73ns)   --->   "%i = add i4 %i_0, 1" [mlp.cpp:23]   --->   Operation 25 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23, label %1, label %0" [mlp.cpp:23]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (3.63ns)   --->   "%tmp_V_14 = call i27 @_ssdm_op_Read.ap_fifo.volatile.i27P(i27* %strm_in_V_V)" [mlp.cpp:25]   --->   Operation 27 'read' 'tmp_V_14' <Predicate = (!icmp_ln23)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 27> <Depth = 0> <FIFO>
ST_2 : Operation 28 [1/1] (1.36ns)   --->   "switch i4 %i_0, label %branch8 [
    i4 0, label %..preheader.backedge_crit_edge
    i4 1, label %branch1
    i4 2, label %branch2
    i4 3, label %branch3
    i4 4, label %branch4
    i4 5, label %branch5
    i4 6, label %branch6
    i4 7, label %branch7
  ]" [mlp.cpp:25]   --->   Operation 28 'switch' <Predicate = (!icmp_ln23)> <Delay = 1.36>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "store i27 %tmp_V_14, i27* %tmp_V_8" [mlp.cpp:25]   --->   Operation 29 'store' <Predicate = (!icmp_ln23 & i_0 == 7)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [mlp.cpp:25]   --->   Operation 30 'br' <Predicate = (!icmp_ln23 & i_0 == 7)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "store i27 %tmp_V_14, i27* %tmp_V_7" [mlp.cpp:25]   --->   Operation 31 'store' <Predicate = (!icmp_ln23 & i_0 == 6)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [mlp.cpp:25]   --->   Operation 32 'br' <Predicate = (!icmp_ln23 & i_0 == 6)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "store i27 %tmp_V_14, i27* %tmp_V_6" [mlp.cpp:25]   --->   Operation 33 'store' <Predicate = (!icmp_ln23 & i_0 == 5)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [mlp.cpp:25]   --->   Operation 34 'br' <Predicate = (!icmp_ln23 & i_0 == 5)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "store i27 %tmp_V_14, i27* %tmp_V_5" [mlp.cpp:25]   --->   Operation 35 'store' <Predicate = (!icmp_ln23 & i_0 == 4)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [mlp.cpp:25]   --->   Operation 36 'br' <Predicate = (!icmp_ln23 & i_0 == 4)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "store i27 %tmp_V_14, i27* %tmp_V_4" [mlp.cpp:25]   --->   Operation 37 'store' <Predicate = (!icmp_ln23 & i_0 == 3)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [mlp.cpp:25]   --->   Operation 38 'br' <Predicate = (!icmp_ln23 & i_0 == 3)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "store i27 %tmp_V_14, i27* %tmp_V_3" [mlp.cpp:25]   --->   Operation 39 'store' <Predicate = (!icmp_ln23 & i_0 == 2)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [mlp.cpp:25]   --->   Operation 40 'br' <Predicate = (!icmp_ln23 & i_0 == 2)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "store i27 %tmp_V_14, i27* %tmp_V_2" [mlp.cpp:25]   --->   Operation 41 'store' <Predicate = (!icmp_ln23 & i_0 == 1)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [mlp.cpp:25]   --->   Operation 42 'br' <Predicate = (!icmp_ln23 & i_0 == 1)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "store i27 %tmp_V_14, i27* %tmp_V" [mlp.cpp:25]   --->   Operation 43 'store' <Predicate = (!icmp_ln23 & i_0 == 0)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [mlp.cpp:25]   --->   Operation 44 'br' <Predicate = (!icmp_ln23 & i_0 == 0)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "store i27 %tmp_V_14, i27* %tmp_V_9" [mlp.cpp:25]   --->   Operation 45 'store' <Predicate = (!icmp_ln23 & i_0 != 0 & i_0 != 1 & i_0 != 2 & i_0 != 3 & i_0 != 4 & i_0 != 5 & i_0 != 6 & i_0 != 7)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "br label %.preheader.backedge" [mlp.cpp:25]   --->   Operation 46 'br' <Predicate = (!icmp_ln23 & i_0 != 0 & i_0 != 1 & i_0 != 2 & i_0 != 3 & i_0 != 4 & i_0 != 5 & i_0 != 6 & i_0 != 7)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_V_load = load i27* %tmp_V" [mlp.cpp:29]   --->   Operation 47 'load' 'tmp_V_load' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_V_2_load = load i27* %tmp_V_2" [mlp.cpp:29]   --->   Operation 48 'load' 'tmp_V_2_load' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_V_3_load = load i27* %tmp_V_3" [mlp.cpp:29]   --->   Operation 49 'load' 'tmp_V_3_load' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_V_4_load = load i27* %tmp_V_4" [mlp.cpp:29]   --->   Operation 50 'load' 'tmp_V_4_load' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_V_5_load = load i27* %tmp_V_5" [mlp.cpp:29]   --->   Operation 51 'load' 'tmp_V_5_load' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_V_6_load = load i27* %tmp_V_6" [mlp.cpp:29]   --->   Operation 52 'load' 'tmp_V_6_load' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_V_7_load = load i27* %tmp_V_7" [mlp.cpp:29]   --->   Operation 53 'load' 'tmp_V_7_load' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_V_8_load = load i27* %tmp_V_8" [mlp.cpp:29]   --->   Operation 54 'load' 'tmp_V_8_load' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_V_9_load = load i27* %tmp_V_9" [mlp.cpp:29]   --->   Operation 55 'load' 'tmp_V_9_load' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_2 : Operation 56 [2/2] (0.00ns)   --->   "%call_ret = call fastcc { i27, i27 } @mlp_xcel(i27 %tmp_V_load, i27 %tmp_V_2_load, i27 %tmp_V_3_load, i27 %tmp_V_4_load, i27 %tmp_V_5_load, i27 %tmp_V_6_load, i27 %tmp_V_7_load, i27 %tmp_V_8_load, i27 %tmp_V_9_load)" [mlp.cpp:29]   --->   Operation 56 'call' 'call_ret' <Predicate = (icmp_ln23)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "br label %.preheader"   --->   Operation 57 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 8.38>
ST_4 : Operation 58 [1/2] (8.38ns)   --->   "%call_ret = call fastcc { i27, i27 } @mlp_xcel(i27 %tmp_V_load, i27 %tmp_V_2_load, i27 %tmp_V_3_load, i27 %tmp_V_4_load, i27 %tmp_V_5_load, i27 %tmp_V_6_load, i27 %tmp_V_7_load, i27 %tmp_V_8_load, i27 %tmp_V_9_load)" [mlp.cpp:29]   --->   Operation 58 'call' 'call_ret' <Predicate = true> <Delay = 8.38> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%mean_output_V = extractvalue { i27, i27 } %call_ret, 0" [mlp.cpp:29]   --->   Operation 59 'extractvalue' 'mean_output_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%variance_output_V = extractvalue { i27, i27 } %call_ret, 1" [mlp.cpp:29]   --->   Operation 60 'extractvalue' 'variance_output_V' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 3.63>
ST_5 : Operation 61 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i27P(i27* %strm_out_V_V, i27 %mean_output_V)" [mlp.cpp:35]   --->   Operation 61 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 27> <Depth = 0> <FIFO>

State 6 <SV = 4> <Delay = 3.63>
ST_6 : Operation 62 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i27P(i27* %strm_out_V_V, i27 %variance_output_V)" [mlp.cpp:36]   --->   Operation 62 'write' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 27> <Depth = 0> <FIFO>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "ret void" [mlp.cpp:37]   --->   Operation 63 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', mlp.cpp:23) [273]  (1.77 ns)

 <State 2>: 3.63ns
The critical path consists of the following:
	fifo read on port 'strm_in_V_V' (mlp.cpp:25) [279]  (3.63 ns)
	'store' operation ('store_ln25', mlp.cpp:25) of variable 'tmp.V', mlp.cpp:25 on local variable 'tmp.V' [282]  (0 ns)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 8.38ns
The critical path consists of the following:
	'call' operation ('call_ret', mlp.cpp:29) to 'mlp_xcel' [320]  (8.38 ns)

 <State 5>: 3.63ns
The critical path consists of the following:
	fifo write on port 'strm_out_V_V' (mlp.cpp:35) [323]  (3.63 ns)

 <State 6>: 3.63ns
The critical path consists of the following:
	fifo write on port 'strm_out_V_V' (mlp.cpp:36) [324]  (3.63 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
