// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module calculate_variance (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        outputs_V_2_address0,
        outputs_V_2_ce0,
        outputs_V_2_q0,
        mean_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_state17 = 26'd65536;
parameter    ap_ST_fsm_state18 = 26'd131072;
parameter    ap_ST_fsm_state19 = 26'd262144;
parameter    ap_ST_fsm_state20 = 26'd524288;
parameter    ap_ST_fsm_state21 = 26'd1048576;
parameter    ap_ST_fsm_state22 = 26'd2097152;
parameter    ap_ST_fsm_state23 = 26'd4194304;
parameter    ap_ST_fsm_state24 = 26'd8388608;
parameter    ap_ST_fsm_state25 = 26'd16777216;
parameter    ap_ST_fsm_state26 = 26'd33554432;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] outputs_V_2_address0;
output   outputs_V_2_ce0;
input  [26:0] outputs_V_2_q0;
input  [26:0] mean_V;
output  [26:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outputs_V_2_ce0;

(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [27:0] rhs_V_fu_188_p1;
reg  signed [27:0] rhs_V_reg_885;
wire   [6:0] i_fu_198_p2;
reg   [6:0] i_reg_893;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln69_fu_192_p2;
wire   [0:0] p_Result_8_fu_209_p3;
reg   [0:0] p_Result_8_reg_903;
wire   [35:0] tmp_V_17_fu_223_p3;
reg   [35:0] tmp_V_17_reg_908;
wire   [31:0] l_fu_257_p1;
reg   [31:0] l_reg_916;
wire   [7:0] trunc_ln943_fu_261_p1;
reg   [7:0] trunc_ln943_reg_921;
wire   [27:0] ret_V_fu_269_p2;
reg   [27:0] ret_V_reg_926;
wire    ap_CS_fsm_state3;
wire  signed [54:0] r_V_fu_277_p2;
reg  signed [54:0] r_V_reg_931;
wire    ap_CS_fsm_state4;
reg   [0:0] tmp_553_reg_936;
wire    ap_CS_fsm_state5;
wire   [110:0] grp_fu_294_p2;
reg   [110:0] mul_ln1148_reg_947;
wire    ap_CS_fsm_state6;
reg   [48:0] tmp_555_reg_952;
reg   [48:0] tmp_554_reg_957;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [31:0] sub_ln944_fu_375_p2;
reg   [31:0] sub_ln944_reg_967;
wire    ap_CS_fsm_state9;
wire   [31:0] or_ln_fu_472_p3;
reg   [31:0] or_ln_reg_973;
wire   [0:0] icmp_ln954_fu_480_p2;
reg   [0:0] icmp_ln954_reg_978;
reg   [35:0] m_3_reg_983;
wire    ap_CS_fsm_state10;
reg   [0:0] tmp_550_reg_988;
wire   [31:0] select_ln935_fu_606_p3;
reg   [31:0] select_ln935_reg_993;
wire    ap_CS_fsm_state11;
wire   [31:0] grp_fu_183_p2;
reg   [31:0] v_assign_reg_998;
wire    ap_CS_fsm_state23;
wire   [53:0] man_V_2_fu_666_p3;
reg   [53:0] man_V_2_reg_1004;
wire    ap_CS_fsm_state25;
wire   [0:0] icmp_ln571_fu_674_p2;
reg   [0:0] icmp_ln571_reg_1009;
wire   [0:0] icmp_ln581_fu_686_p2;
reg   [0:0] icmp_ln581_reg_1015;
wire  signed [11:0] sh_amt_fu_704_p3;
reg  signed [11:0] sh_amt_reg_1021;
wire   [0:0] icmp_ln582_fu_712_p2;
reg   [0:0] icmp_ln582_reg_1028;
wire   [26:0] trunc_ln583_fu_718_p1;
reg   [26:0] trunc_ln583_reg_1034;
reg   [35:0] tmp_V_16_reg_157;
reg   [6:0] i_0_reg_169;
wire   [63:0] zext_ln71_fu_204_p1;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state12;
wire   [35:0] tmp_V_fu_217_p2;
reg   [35:0] p_Result_s_fu_231_p4;
wire   [63:0] p_Result_9_fu_241_p3;
reg   [63:0] tmp_fu_249_p3;
wire  signed [27:0] lhs_V_fu_265_p1;
wire  signed [27:0] r_V_fu_277_p0;
wire  signed [54:0] sext_ln1116_fu_274_p1;
wire  signed [27:0] r_V_fu_277_p1;
wire   [56:0] grp_fu_294_p0;
wire   [110:0] sub_ln1148_fu_310_p2;
wire   [48:0] select_ln1148_fu_325_p3;
wire   [45:0] trunc_ln1192_fu_330_p1;
wire   [45:0] sub_ln1192_fu_334_p2;
wire   [45:0] trunc_ln1192_1_fu_348_p1;
wire   [45:0] select_ln1148_2_fu_352_p3;
wire   [45:0] lhs_V_1_fu_340_p3;
wire   [45:0] ret_V_2_fu_359_p2;
wire   [31:0] lsb_index_fu_380_p2;
wire   [30:0] tmp_548_fu_386_p4;
wire   [5:0] trunc_ln947_fu_402_p1;
wire   [5:0] sub_ln947_fu_406_p2;
wire   [35:0] zext_ln947_fu_412_p1;
wire   [35:0] lshr_ln947_fu_416_p2;
wire   [35:0] p_Result_4_fu_422_p2;
wire   [0:0] icmp_ln947_fu_396_p2;
wire   [0:0] icmp_ln947_1_fu_427_p2;
wire   [0:0] tmp_549_fu_439_p3;
wire   [0:0] p_Result_3_fu_453_p3;
wire   [0:0] xor_ln949_fu_447_p2;
wire   [0:0] and_ln949_fu_460_p2;
wire   [0:0] a_fu_433_p2;
wire   [0:0] or_ln949_fu_466_p2;
wire   [31:0] add_ln954_fu_486_p2;
wire   [35:0] zext_ln954_fu_491_p1;
wire   [31:0] sub_ln954_fu_500_p2;
wire   [35:0] zext_ln954_1_fu_505_p1;
wire   [35:0] lshr_ln954_fu_495_p2;
wire   [35:0] shl_ln954_fu_509_p2;
wire   [35:0] select_ln954_fu_514_p3;
wire   [36:0] zext_ln954_2_fu_521_p1;
wire   [36:0] zext_ln961_fu_525_p1;
wire   [36:0] m_fu_528_p2;
wire   [7:0] select_ln964_fu_561_p3;
wire   [7:0] sub_ln964_fu_568_p2;
wire   [7:0] add_ln964_fu_573_p2;
wire   [63:0] zext_ln962_fu_558_p1;
wire   [8:0] tmp_3_fu_579_p3;
wire   [63:0] p_Result_10_fu_586_p5;
wire   [31:0] trunc_ln738_fu_598_p1;
wire   [0:0] icmp_ln935_fu_552_p2;
wire   [31:0] bitcast_ln739_fu_602_p1;
wire   [63:0] grp_fu_180_p1;
wire   [63:0] ireg_V_fu_614_p1;
wire   [10:0] exp_tmp_V_fu_630_p4;
wire   [51:0] trunc_ln565_fu_644_p1;
wire   [52:0] tmp_4_fu_648_p3;
wire   [53:0] p_Result_12_fu_656_p1;
wire   [0:0] p_Result_11_fu_622_p3;
wire   [53:0] man_V_1_fu_660_p2;
wire   [62:0] trunc_ln556_fu_618_p1;
wire   [11:0] zext_ln461_fu_640_p1;
wire   [11:0] F2_fu_680_p2;
wire   [11:0] add_ln581_fu_692_p2;
wire   [11:0] sub_ln581_fu_698_p2;
wire    ap_CS_fsm_state26;
wire  signed [31:0] sext_ln581_fu_722_p1;
wire   [53:0] zext_ln586_fu_735_p1;
wire   [53:0] ashr_ln586_fu_739_p2;
wire   [31:0] bitcast_ln696_fu_748_p1;
wire   [0:0] tmp_552_fu_751_p3;
wire   [26:0] sext_ln581cast_fu_767_p1;
wire   [0:0] xor_ln571_fu_776_p2;
wire   [0:0] or_ln582_fu_786_p2;
wire   [0:0] xor_ln582_fu_790_p2;
wire   [0:0] icmp_ln585_fu_725_p2;
wire   [0:0] and_ln581_fu_796_p2;
wire   [0:0] xor_ln585_fu_801_p2;
wire   [0:0] or_ln581_fu_819_p2;
wire   [0:0] icmp_ln603_fu_730_p2;
wire   [0:0] xor_ln581_fu_824_p2;
wire   [0:0] and_ln603_fu_830_p2;
wire   [26:0] shl_ln604_fu_771_p2;
wire   [26:0] trunc_ln586_fu_744_p1;
wire   [0:0] and_ln585_1_fu_813_p2;
wire   [0:0] and_ln585_fu_807_p2;
wire   [26:0] select_ln588_fu_759_p3;
wire   [0:0] and_ln582_fu_781_p2;
wire   [0:0] or_ln603_fu_844_p2;
wire   [26:0] select_ln603_fu_836_p3;
wire   [26:0] select_ln603_1_fu_850_p3;
wire   [0:0] or_ln603_1_fu_857_p2;
wire   [0:0] or_ln603_2_fu_871_p2;
wire   [26:0] select_ln603_2_fu_863_p3;
reg   [25:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
end

dut_fpext_32ns_64cdu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
dut_fpext_32ns_64cdu_U696(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(v_assign_reg_998),
    .ce(1'b1),
    .dout(grp_fu_180_p1)
);

dut_fsqrt_32ns_32ceu #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fsqrt_32ns_32ceu_U697(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(select_ln935_reg_993),
    .ce(1'b1),
    .dout(grp_fu_183_p2)
);

dut_mul_57ns_55s_cfu #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 57 ),
    .din1_WIDTH( 55 ),
    .dout_WIDTH( 111 ))
dut_mul_57ns_55s_cfu_U698(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_294_p0),
    .din1(r_V_reg_931),
    .ce(1'b1),
    .dout(grp_fu_294_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_0_reg_169 <= i_reg_893;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_169 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_V_16_reg_157 <= {{ret_V_2_fu_359_p2[45:10]}};
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_16_reg_157 <= 36'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_893 <= i_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        icmp_ln571_reg_1009 <= icmp_ln571_fu_674_p2;
        icmp_ln581_reg_1015 <= icmp_ln581_fu_686_p2;
        icmp_ln582_reg_1028 <= icmp_ln582_fu_712_p2;
        man_V_2_reg_1004 <= man_V_2_fu_666_p3;
        sh_amt_reg_1021 <= sh_amt_fu_704_p3;
        trunc_ln583_reg_1034 <= trunc_ln583_fu_718_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln954_reg_978 <= icmp_ln954_fu_480_p2;
        or_ln_reg_973[0] <= or_ln_fu_472_p3[0];
        sub_ln944_reg_967 <= sub_ln944_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_192_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        l_reg_916 <= l_fu_257_p1;
        p_Result_8_reg_903 <= tmp_V_16_reg_157[32'd35];
        tmp_V_17_reg_908 <= tmp_V_17_fu_223_p3;
        trunc_ln943_reg_921 <= trunc_ln943_fu_261_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        m_3_reg_983 <= {{m_fu_528_p2[36:1]}};
        tmp_550_reg_988 <= m_fu_528_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_ln1148_reg_947 <= grp_fu_294_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        r_V_reg_931 <= r_V_fu_277_p2;
        tmp_553_reg_936 <= r_V_fu_277_p2[32'd54];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ret_V_reg_926 <= ret_V_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        rhs_V_reg_885 <= rhs_V_fu_188_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        select_ln935_reg_993 <= select_ln935_fu_606_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_553_reg_936 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_554_reg_957 <= {{sub_ln1148_fu_310_p2[110:62]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_553_reg_936 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_555_reg_952 <= {{grp_fu_294_p2[110:62]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        v_assign_reg_998 <= grp_fu_183_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        outputs_V_2_ce0 = 1'b1;
    end else begin
        outputs_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln69_fu_192_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_680_p2 = (12'd1075 - zext_ln461_fu_640_p1);

assign a_fu_433_p2 = (icmp_ln947_fu_396_p2 & icmp_ln947_1_fu_427_p2);

assign add_ln581_fu_692_p2 = ($signed(12'd4086) + $signed(F2_fu_680_p2));

assign add_ln954_fu_486_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_967));

assign add_ln964_fu_573_p2 = (select_ln964_fu_561_p3 + sub_ln964_fu_568_p2);

assign and_ln581_fu_796_p2 = (xor_ln582_fu_790_p2 & icmp_ln581_reg_1015);

assign and_ln582_fu_781_p2 = (xor_ln571_fu_776_p2 & icmp_ln582_reg_1028);

assign and_ln585_1_fu_813_p2 = (icmp_ln585_fu_725_p2 & and_ln581_fu_796_p2);

assign and_ln585_fu_807_p2 = (xor_ln585_fu_801_p2 & and_ln581_fu_796_p2);

assign and_ln603_fu_830_p2 = (xor_ln581_fu_824_p2 & icmp_ln603_fu_730_p2);

assign and_ln949_fu_460_p2 = (xor_ln949_fu_447_p2 & p_Result_3_fu_453_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = ((or_ln603_2_fu_871_p2[0:0] === 1'b1) ? select_ln603_2_fu_863_p3 : 27'd0);

assign ashr_ln586_fu_739_p2 = $signed(man_V_2_reg_1004) >>> zext_ln586_fu_735_p1;

assign bitcast_ln696_fu_748_p1 = v_assign_reg_998;

assign bitcast_ln739_fu_602_p1 = trunc_ln738_fu_598_p1;

assign exp_tmp_V_fu_630_p4 = {{ireg_V_fu_614_p1[62:52]}};

assign grp_fu_294_p0 = 111'd46116860184273880;

assign i_fu_198_p2 = (i_0_reg_169 + 7'd1);

assign icmp_ln571_fu_674_p2 = ((trunc_ln556_fu_618_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_686_p2 = (($signed(F2_fu_680_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_712_p2 = ((F2_fu_680_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_725_p2 = ((sh_amt_reg_1021 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_730_p2 = ((sh_amt_reg_1021 < 12'd27) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_192_p2 = ((i_0_reg_169 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_552_p2 = ((tmp_V_16_reg_157 == 36'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_427_p2 = ((p_Result_4_fu_422_p2 != 36'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_396_p2 = (($signed(tmp_548_fu_386_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln954_fu_480_p2 = (($signed(lsb_index_fu_380_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_V_fu_614_p1 = grp_fu_180_p1;

assign l_fu_257_p1 = tmp_fu_249_p3[31:0];

assign lhs_V_1_fu_340_p3 = {{tmp_V_16_reg_157}, {10'd0}};

assign lhs_V_fu_265_p1 = $signed(outputs_V_2_q0);

assign lsb_index_fu_380_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_375_p2));

assign lshr_ln947_fu_416_p2 = 36'd68719476735 >> zext_ln947_fu_412_p1;

assign lshr_ln954_fu_495_p2 = tmp_V_17_reg_908 >> zext_ln954_fu_491_p1;

assign m_fu_528_p2 = (zext_ln954_2_fu_521_p1 + zext_ln961_fu_525_p1);

assign man_V_1_fu_660_p2 = (54'd0 - p_Result_12_fu_656_p1);

assign man_V_2_fu_666_p3 = ((p_Result_11_fu_622_p3[0:0] === 1'b1) ? man_V_1_fu_660_p2 : p_Result_12_fu_656_p1);

assign or_ln581_fu_819_p2 = (or_ln582_fu_786_p2 | icmp_ln581_reg_1015);

assign or_ln582_fu_786_p2 = (icmp_ln582_reg_1028 | icmp_ln571_reg_1009);

assign or_ln603_1_fu_857_p2 = (and_ln585_fu_807_p2 | and_ln582_fu_781_p2);

assign or_ln603_2_fu_871_p2 = (or_ln603_fu_844_p2 | or_ln603_1_fu_857_p2);

assign or_ln603_fu_844_p2 = (and_ln603_fu_830_p2 | and_ln585_1_fu_813_p2);

assign or_ln949_fu_466_p2 = (and_ln949_fu_460_p2 | a_fu_433_p2);

assign or_ln_fu_472_p3 = {{31'd0}, {or_ln949_fu_466_p2}};

assign outputs_V_2_address0 = zext_ln71_fu_204_p1;

assign p_Result_10_fu_586_p5 = {{zext_ln962_fu_558_p1[63:32]}, {tmp_3_fu_579_p3}, {zext_ln962_fu_558_p1[22:0]}};

assign p_Result_11_fu_622_p3 = ireg_V_fu_614_p1[32'd63];

assign p_Result_12_fu_656_p1 = tmp_4_fu_648_p3;

assign p_Result_3_fu_453_p3 = tmp_V_17_reg_908[lsb_index_fu_380_p2];

assign p_Result_4_fu_422_p2 = (tmp_V_17_reg_908 & lshr_ln947_fu_416_p2);

assign p_Result_8_fu_209_p3 = tmp_V_16_reg_157[32'd35];

assign p_Result_9_fu_241_p3 = {{28'd268435455}, {p_Result_s_fu_231_p4}};

integer ap_tvar_int_0;

always @ (tmp_V_17_fu_223_p3) begin
    for (ap_tvar_int_0 = 36 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 35 - 0) begin
            p_Result_s_fu_231_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_231_p4[ap_tvar_int_0] = tmp_V_17_fu_223_p3[35 - ap_tvar_int_0];
        end
    end
end

assign r_V_fu_277_p0 = sext_ln1116_fu_274_p1;

assign r_V_fu_277_p1 = sext_ln1116_fu_274_p1;

assign r_V_fu_277_p2 = ($signed(r_V_fu_277_p0) * $signed(r_V_fu_277_p1));

assign ret_V_2_fu_359_p2 = (select_ln1148_2_fu_352_p3 + lhs_V_1_fu_340_p3);

assign ret_V_fu_269_p2 = ($signed(lhs_V_fu_265_p1) - $signed(rhs_V_reg_885));

assign rhs_V_fu_188_p1 = $signed(mean_V);

assign select_ln1148_2_fu_352_p3 = ((tmp_553_reg_936[0:0] === 1'b1) ? sub_ln1192_fu_334_p2 : trunc_ln1192_1_fu_348_p1);

assign select_ln1148_fu_325_p3 = ((tmp_553_reg_936[0:0] === 1'b1) ? tmp_554_reg_957 : tmp_555_reg_952);

assign select_ln588_fu_759_p3 = ((tmp_552_fu_751_p3[0:0] === 1'b1) ? 27'd134217727 : 27'd0);

assign select_ln603_1_fu_850_p3 = ((and_ln585_fu_807_p2[0:0] === 1'b1) ? select_ln588_fu_759_p3 : trunc_ln583_reg_1034);

assign select_ln603_2_fu_863_p3 = ((or_ln603_fu_844_p2[0:0] === 1'b1) ? select_ln603_fu_836_p3 : select_ln603_1_fu_850_p3);

assign select_ln603_fu_836_p3 = ((and_ln603_fu_830_p2[0:0] === 1'b1) ? shl_ln604_fu_771_p2 : trunc_ln586_fu_744_p1);

assign select_ln935_fu_606_p3 = ((icmp_ln935_fu_552_p2[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_602_p1);

assign select_ln954_fu_514_p3 = ((icmp_ln954_reg_978[0:0] === 1'b1) ? lshr_ln954_fu_495_p2 : shl_ln954_fu_509_p2);

assign select_ln964_fu_561_p3 = ((tmp_550_reg_988[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln1116_fu_274_p1 = $signed(ret_V_reg_926);

assign sext_ln581_fu_722_p1 = sh_amt_reg_1021;

assign sext_ln581cast_fu_767_p1 = sext_ln581_fu_722_p1[26:0];

assign sh_amt_fu_704_p3 = ((icmp_ln581_fu_686_p2[0:0] === 1'b1) ? add_ln581_fu_692_p2 : sub_ln581_fu_698_p2);

assign shl_ln604_fu_771_p2 = trunc_ln583_reg_1034 << sext_ln581cast_fu_767_p1;

assign shl_ln954_fu_509_p2 = tmp_V_17_reg_908 << zext_ln954_1_fu_505_p1;

assign sub_ln1148_fu_310_p2 = (111'd0 - mul_ln1148_reg_947);

assign sub_ln1192_fu_334_p2 = (46'd0 - trunc_ln1192_fu_330_p1);

assign sub_ln581_fu_698_p2 = (12'd10 - F2_fu_680_p2);

assign sub_ln944_fu_375_p2 = (32'd36 - l_reg_916);

assign sub_ln947_fu_406_p2 = ($signed(6'd61) - $signed(trunc_ln947_fu_402_p1));

assign sub_ln954_fu_500_p2 = (32'd25 - sub_ln944_reg_967);

assign sub_ln964_fu_568_p2 = (8'd26 - trunc_ln943_reg_921);

assign tmp_3_fu_579_p3 = {{p_Result_8_reg_903}, {add_ln964_fu_573_p2}};

assign tmp_4_fu_648_p3 = {{1'd1}, {trunc_ln565_fu_644_p1}};

assign tmp_548_fu_386_p4 = {{lsb_index_fu_380_p2[31:1]}};

assign tmp_549_fu_439_p3 = lsb_index_fu_380_p2[32'd31];

assign tmp_552_fu_751_p3 = bitcast_ln696_fu_748_p1[32'd31];

assign tmp_V_17_fu_223_p3 = ((p_Result_8_fu_209_p3[0:0] === 1'b1) ? tmp_V_fu_217_p2 : tmp_V_16_reg_157);

assign tmp_V_fu_217_p2 = (36'd0 - tmp_V_16_reg_157);


always @ (p_Result_9_fu_241_p3) begin
    if (p_Result_9_fu_241_p3[0] == 1'b1) begin
        tmp_fu_249_p3 = 64'd0;
    end else if (p_Result_9_fu_241_p3[1] == 1'b1) begin
        tmp_fu_249_p3 = 64'd1;
    end else if (p_Result_9_fu_241_p3[2] == 1'b1) begin
        tmp_fu_249_p3 = 64'd2;
    end else if (p_Result_9_fu_241_p3[3] == 1'b1) begin
        tmp_fu_249_p3 = 64'd3;
    end else if (p_Result_9_fu_241_p3[4] == 1'b1) begin
        tmp_fu_249_p3 = 64'd4;
    end else if (p_Result_9_fu_241_p3[5] == 1'b1) begin
        tmp_fu_249_p3 = 64'd5;
    end else if (p_Result_9_fu_241_p3[6] == 1'b1) begin
        tmp_fu_249_p3 = 64'd6;
    end else if (p_Result_9_fu_241_p3[7] == 1'b1) begin
        tmp_fu_249_p3 = 64'd7;
    end else if (p_Result_9_fu_241_p3[8] == 1'b1) begin
        tmp_fu_249_p3 = 64'd8;
    end else if (p_Result_9_fu_241_p3[9] == 1'b1) begin
        tmp_fu_249_p3 = 64'd9;
    end else if (p_Result_9_fu_241_p3[10] == 1'b1) begin
        tmp_fu_249_p3 = 64'd10;
    end else if (p_Result_9_fu_241_p3[11] == 1'b1) begin
        tmp_fu_249_p3 = 64'd11;
    end else if (p_Result_9_fu_241_p3[12] == 1'b1) begin
        tmp_fu_249_p3 = 64'd12;
    end else if (p_Result_9_fu_241_p3[13] == 1'b1) begin
        tmp_fu_249_p3 = 64'd13;
    end else if (p_Result_9_fu_241_p3[14] == 1'b1) begin
        tmp_fu_249_p3 = 64'd14;
    end else if (p_Result_9_fu_241_p3[15] == 1'b1) begin
        tmp_fu_249_p3 = 64'd15;
    end else if (p_Result_9_fu_241_p3[16] == 1'b1) begin
        tmp_fu_249_p3 = 64'd16;
    end else if (p_Result_9_fu_241_p3[17] == 1'b1) begin
        tmp_fu_249_p3 = 64'd17;
    end else if (p_Result_9_fu_241_p3[18] == 1'b1) begin
        tmp_fu_249_p3 = 64'd18;
    end else if (p_Result_9_fu_241_p3[19] == 1'b1) begin
        tmp_fu_249_p3 = 64'd19;
    end else if (p_Result_9_fu_241_p3[20] == 1'b1) begin
        tmp_fu_249_p3 = 64'd20;
    end else if (p_Result_9_fu_241_p3[21] == 1'b1) begin
        tmp_fu_249_p3 = 64'd21;
    end else if (p_Result_9_fu_241_p3[22] == 1'b1) begin
        tmp_fu_249_p3 = 64'd22;
    end else if (p_Result_9_fu_241_p3[23] == 1'b1) begin
        tmp_fu_249_p3 = 64'd23;
    end else if (p_Result_9_fu_241_p3[24] == 1'b1) begin
        tmp_fu_249_p3 = 64'd24;
    end else if (p_Result_9_fu_241_p3[25] == 1'b1) begin
        tmp_fu_249_p3 = 64'd25;
    end else if (p_Result_9_fu_241_p3[26] == 1'b1) begin
        tmp_fu_249_p3 = 64'd26;
    end else if (p_Result_9_fu_241_p3[27] == 1'b1) begin
        tmp_fu_249_p3 = 64'd27;
    end else if (p_Result_9_fu_241_p3[28] == 1'b1) begin
        tmp_fu_249_p3 = 64'd28;
    end else if (p_Result_9_fu_241_p3[29] == 1'b1) begin
        tmp_fu_249_p3 = 64'd29;
    end else if (p_Result_9_fu_241_p3[30] == 1'b1) begin
        tmp_fu_249_p3 = 64'd30;
    end else if (p_Result_9_fu_241_p3[31] == 1'b1) begin
        tmp_fu_249_p3 = 64'd31;
    end else if (p_Result_9_fu_241_p3[32] == 1'b1) begin
        tmp_fu_249_p3 = 64'd32;
    end else if (p_Result_9_fu_241_p3[33] == 1'b1) begin
        tmp_fu_249_p3 = 64'd33;
    end else if (p_Result_9_fu_241_p3[34] == 1'b1) begin
        tmp_fu_249_p3 = 64'd34;
    end else if (p_Result_9_fu_241_p3[35] == 1'b1) begin
        tmp_fu_249_p3 = 64'd35;
    end else if (p_Result_9_fu_241_p3[36] == 1'b1) begin
        tmp_fu_249_p3 = 64'd36;
    end else if (p_Result_9_fu_241_p3[37] == 1'b1) begin
        tmp_fu_249_p3 = 64'd37;
    end else if (p_Result_9_fu_241_p3[38] == 1'b1) begin
        tmp_fu_249_p3 = 64'd38;
    end else if (p_Result_9_fu_241_p3[39] == 1'b1) begin
        tmp_fu_249_p3 = 64'd39;
    end else if (p_Result_9_fu_241_p3[40] == 1'b1) begin
        tmp_fu_249_p3 = 64'd40;
    end else if (p_Result_9_fu_241_p3[41] == 1'b1) begin
        tmp_fu_249_p3 = 64'd41;
    end else if (p_Result_9_fu_241_p3[42] == 1'b1) begin
        tmp_fu_249_p3 = 64'd42;
    end else if (p_Result_9_fu_241_p3[43] == 1'b1) begin
        tmp_fu_249_p3 = 64'd43;
    end else if (p_Result_9_fu_241_p3[44] == 1'b1) begin
        tmp_fu_249_p3 = 64'd44;
    end else if (p_Result_9_fu_241_p3[45] == 1'b1) begin
        tmp_fu_249_p3 = 64'd45;
    end else if (p_Result_9_fu_241_p3[46] == 1'b1) begin
        tmp_fu_249_p3 = 64'd46;
    end else if (p_Result_9_fu_241_p3[47] == 1'b1) begin
        tmp_fu_249_p3 = 64'd47;
    end else if (p_Result_9_fu_241_p3[48] == 1'b1) begin
        tmp_fu_249_p3 = 64'd48;
    end else if (p_Result_9_fu_241_p3[49] == 1'b1) begin
        tmp_fu_249_p3 = 64'd49;
    end else if (p_Result_9_fu_241_p3[50] == 1'b1) begin
        tmp_fu_249_p3 = 64'd50;
    end else if (p_Result_9_fu_241_p3[51] == 1'b1) begin
        tmp_fu_249_p3 = 64'd51;
    end else if (p_Result_9_fu_241_p3[52] == 1'b1) begin
        tmp_fu_249_p3 = 64'd52;
    end else if (p_Result_9_fu_241_p3[53] == 1'b1) begin
        tmp_fu_249_p3 = 64'd53;
    end else if (p_Result_9_fu_241_p3[54] == 1'b1) begin
        tmp_fu_249_p3 = 64'd54;
    end else if (p_Result_9_fu_241_p3[55] == 1'b1) begin
        tmp_fu_249_p3 = 64'd55;
    end else if (p_Result_9_fu_241_p3[56] == 1'b1) begin
        tmp_fu_249_p3 = 64'd56;
    end else if (p_Result_9_fu_241_p3[57] == 1'b1) begin
        tmp_fu_249_p3 = 64'd57;
    end else if (p_Result_9_fu_241_p3[58] == 1'b1) begin
        tmp_fu_249_p3 = 64'd58;
    end else if (p_Result_9_fu_241_p3[59] == 1'b1) begin
        tmp_fu_249_p3 = 64'd59;
    end else if (p_Result_9_fu_241_p3[60] == 1'b1) begin
        tmp_fu_249_p3 = 64'd60;
    end else if (p_Result_9_fu_241_p3[61] == 1'b1) begin
        tmp_fu_249_p3 = 64'd61;
    end else if (p_Result_9_fu_241_p3[62] == 1'b1) begin
        tmp_fu_249_p3 = 64'd62;
    end else if (p_Result_9_fu_241_p3[63] == 1'b1) begin
        tmp_fu_249_p3 = 64'd63;
    end else begin
        tmp_fu_249_p3 = 64'd64;
    end
end

assign trunc_ln1192_1_fu_348_p1 = select_ln1148_fu_325_p3[45:0];

assign trunc_ln1192_fu_330_p1 = select_ln1148_fu_325_p3[45:0];

assign trunc_ln556_fu_618_p1 = ireg_V_fu_614_p1[62:0];

assign trunc_ln565_fu_644_p1 = ireg_V_fu_614_p1[51:0];

assign trunc_ln583_fu_718_p1 = man_V_2_fu_666_p3[26:0];

assign trunc_ln586_fu_744_p1 = ashr_ln586_fu_739_p2[26:0];

assign trunc_ln738_fu_598_p1 = p_Result_10_fu_586_p5[31:0];

assign trunc_ln943_fu_261_p1 = tmp_fu_249_p3[7:0];

assign trunc_ln947_fu_402_p1 = sub_ln944_fu_375_p2[5:0];

assign xor_ln571_fu_776_p2 = (icmp_ln571_reg_1009 ^ 1'd1);

assign xor_ln581_fu_824_p2 = (or_ln581_fu_819_p2 ^ 1'd1);

assign xor_ln582_fu_790_p2 = (or_ln582_fu_786_p2 ^ 1'd1);

assign xor_ln585_fu_801_p2 = (icmp_ln585_fu_725_p2 ^ 1'd1);

assign xor_ln949_fu_447_p2 = (tmp_549_fu_439_p3 ^ 1'd1);

assign zext_ln461_fu_640_p1 = exp_tmp_V_fu_630_p4;

assign zext_ln586_fu_735_p1 = $unsigned(sext_ln581_fu_722_p1);

assign zext_ln71_fu_204_p1 = i_0_reg_169;

assign zext_ln947_fu_412_p1 = sub_ln947_fu_406_p2;

assign zext_ln954_1_fu_505_p1 = sub_ln954_fu_500_p2;

assign zext_ln954_2_fu_521_p1 = select_ln954_fu_514_p3;

assign zext_ln954_fu_491_p1 = add_ln954_fu_486_p2;

assign zext_ln961_fu_525_p1 = or_ln_reg_973;

assign zext_ln962_fu_558_p1 = m_3_reg_983;

always @ (posedge ap_clk) begin
    or_ln_reg_973[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //calculate_variance
