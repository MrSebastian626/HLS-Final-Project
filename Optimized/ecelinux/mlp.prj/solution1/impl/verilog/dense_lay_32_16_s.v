// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_lay_32_16_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_V_read,
        input_1_V_read,
        input_2_V_read,
        input_3_V_read,
        input_4_V_read,
        input_5_V_read,
        input_6_V_read,
        input_7_V_read,
        input_8_V_read,
        input_9_V_read,
        input_10_V_read,
        input_11_V_read,
        input_12_V_read,
        input_13_V_read,
        input_14_V_read,
        input_15_V_read,
        input_16_V_read,
        input_17_V_read,
        input_18_V_read,
        input_19_V_read,
        input_20_V_read,
        input_21_V_read,
        input_22_V_read,
        input_23_V_read,
        input_24_V_read,
        input_25_V_read,
        input_26_V_read,
        input_27_V_read,
        input_28_V_read,
        input_29_V_read,
        input_30_V_read,
        input_31_V_read,
        output_0_V_read,
        output_1_V_read,
        output_2_V_read,
        output_3_V_read,
        output_4_V_read,
        output_5_V_read,
        output_6_V_read,
        output_7_V_read,
        output_8_V_read,
        output_9_V_read,
        output_10_V_read,
        output_11_V_read,
        output_12_V_read,
        output_13_V_read,
        output_14_V_read,
        output_15_V_read,
        mask_address0,
        mask_ce0,
        mask_q0,
        mask78_address0,
        mask78_ce0,
        mask78_q0,
        mask79_address0,
        mask79_ce0,
        mask79_q0,
        mask80_address0,
        mask80_ce0,
        mask80_q0,
        mask81_address0,
        mask81_ce0,
        mask81_q0,
        mask82_address0,
        mask82_ce0,
        mask82_q0,
        mask83_address0,
        mask83_ce0,
        mask83_q0,
        mask84_address0,
        mask84_ce0,
        mask84_q0,
        mask85_address0,
        mask85_ce0,
        mask85_q0,
        mask86_address0,
        mask86_ce0,
        mask86_q0,
        mask87_address0,
        mask87_ce0,
        mask87_q0,
        mask88_address0,
        mask88_ce0,
        mask88_q0,
        mask89_address0,
        mask89_ce0,
        mask89_q0,
        mask90_address0,
        mask90_ce0,
        mask90_q0,
        mask91_address0,
        mask91_ce0,
        mask91_q0,
        mask92_address0,
        mask92_ce0,
        mask92_q0,
        mask_offset,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [25:0] input_0_V_read;
input  [25:0] input_1_V_read;
input  [25:0] input_2_V_read;
input  [25:0] input_3_V_read;
input  [25:0] input_4_V_read;
input  [25:0] input_5_V_read;
input  [25:0] input_6_V_read;
input  [25:0] input_7_V_read;
input  [25:0] input_8_V_read;
input  [25:0] input_9_V_read;
input  [25:0] input_10_V_read;
input  [25:0] input_11_V_read;
input  [25:0] input_12_V_read;
input  [25:0] input_13_V_read;
input  [25:0] input_14_V_read;
input  [25:0] input_15_V_read;
input  [25:0] input_16_V_read;
input  [25:0] input_17_V_read;
input  [25:0] input_18_V_read;
input  [25:0] input_19_V_read;
input  [25:0] input_20_V_read;
input  [25:0] input_21_V_read;
input  [25:0] input_22_V_read;
input  [25:0] input_23_V_read;
input  [25:0] input_24_V_read;
input  [25:0] input_25_V_read;
input  [25:0] input_26_V_read;
input  [25:0] input_27_V_read;
input  [25:0] input_28_V_read;
input  [25:0] input_29_V_read;
input  [25:0] input_30_V_read;
input  [25:0] input_31_V_read;
input  [25:0] output_0_V_read;
input  [25:0] output_1_V_read;
input  [25:0] output_2_V_read;
input  [25:0] output_3_V_read;
input  [25:0] output_4_V_read;
input  [25:0] output_5_V_read;
input  [25:0] output_6_V_read;
input  [25:0] output_7_V_read;
input  [25:0] output_8_V_read;
input  [25:0] output_9_V_read;
input  [25:0] output_10_V_read;
input  [25:0] output_11_V_read;
input  [25:0] output_12_V_read;
input  [25:0] output_13_V_read;
input  [25:0] output_14_V_read;
input  [25:0] output_15_V_read;
output  [6:0] mask_address0;
output   mask_ce0;
input  [0:0] mask_q0;
output  [6:0] mask78_address0;
output   mask78_ce0;
input  [0:0] mask78_q0;
output  [6:0] mask79_address0;
output   mask79_ce0;
input  [0:0] mask79_q0;
output  [6:0] mask80_address0;
output   mask80_ce0;
input  [0:0] mask80_q0;
output  [6:0] mask81_address0;
output   mask81_ce0;
input  [0:0] mask81_q0;
output  [6:0] mask82_address0;
output   mask82_ce0;
input  [0:0] mask82_q0;
output  [6:0] mask83_address0;
output   mask83_ce0;
input  [0:0] mask83_q0;
output  [6:0] mask84_address0;
output   mask84_ce0;
input  [0:0] mask84_q0;
output  [6:0] mask85_address0;
output   mask85_ce0;
input  [0:0] mask85_q0;
output  [6:0] mask86_address0;
output   mask86_ce0;
input  [0:0] mask86_q0;
output  [6:0] mask87_address0;
output   mask87_ce0;
input  [0:0] mask87_q0;
output  [6:0] mask88_address0;
output   mask88_ce0;
input  [0:0] mask88_q0;
output  [6:0] mask89_address0;
output   mask89_ce0;
input  [0:0] mask89_q0;
output  [6:0] mask90_address0;
output   mask90_ce0;
input  [0:0] mask90_q0;
output  [6:0] mask91_address0;
output   mask91_ce0;
input  [0:0] mask91_q0;
output  [6:0] mask92_address0;
output   mask92_ce0;
input  [0:0] mask92_q0;
input  [6:0] mask_offset;
output  [26:0] ap_return_0;
output  [26:0] ap_return_1;
output  [26:0] ap_return_2;
output  [26:0] ap_return_3;
output  [26:0] ap_return_4;
output  [26:0] ap_return_5;
output  [26:0] ap_return_6;
output  [26:0] ap_return_7;
output  [26:0] ap_return_8;
output  [26:0] ap_return_9;
output  [26:0] ap_return_10;
output  [26:0] ap_return_11;
output  [26:0] ap_return_12;
output  [26:0] ap_return_13;
output  [26:0] ap_return_14;
output  [26:0] ap_return_15;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg mask_ce0;
reg mask78_ce0;
reg mask79_ce0;
reg mask80_ce0;
reg mask81_ce0;
reg mask82_ce0;
reg mask83_ce0;
reg mask84_ce0;
reg mask85_ce0;
reg mask86_ce0;
reg mask87_ce0;
reg mask88_ce0;
reg mask89_ce0;
reg mask90_ce0;
reg mask91_ce0;
reg mask92_ce0;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] b3_V_address0;
reg    b3_V_ce0;
wire   [14:0] b3_V_q0;
wire   [3:0] w3_V_0_address0;
reg    w3_V_0_ce0;
wire   [12:0] w3_V_0_q0;
wire   [3:0] w3_V_1_address0;
reg    w3_V_1_ce0;
wire   [9:0] w3_V_1_q0;
wire   [3:0] w3_V_2_address0;
reg    w3_V_2_ce0;
wire   [11:0] w3_V_2_q0;
wire   [3:0] w3_V_3_address0;
reg    w3_V_3_ce0;
wire   [11:0] w3_V_3_q0;
wire   [3:0] w3_V_4_address0;
reg    w3_V_4_ce0;
wire   [11:0] w3_V_4_q0;
wire   [3:0] w3_V_5_address0;
reg    w3_V_5_ce0;
wire   [10:0] w3_V_5_q0;
wire   [3:0] w3_V_6_address0;
reg    w3_V_6_ce0;
wire   [9:0] w3_V_6_q0;
wire   [3:0] w3_V_7_address0;
reg    w3_V_7_ce0;
wire   [10:0] w3_V_7_q0;
wire   [3:0] w3_V_8_address0;
reg    w3_V_8_ce0;
wire   [9:0] w3_V_8_q0;
wire   [3:0] w3_V_9_address0;
reg    w3_V_9_ce0;
wire   [10:0] w3_V_9_q0;
wire   [3:0] w3_V_10_address0;
reg    w3_V_10_ce0;
wire   [11:0] w3_V_10_q0;
wire   [3:0] w3_V_11_address0;
reg    w3_V_11_ce0;
wire   [11:0] w3_V_11_q0;
wire   [3:0] w3_V_12_address0;
reg    w3_V_12_ce0;
wire   [9:0] w3_V_12_q0;
wire   [3:0] w3_V_13_address0;
reg    w3_V_13_ce0;
wire   [9:0] w3_V_13_q0;
wire   [3:0] w3_V_14_address0;
reg    w3_V_14_ce0;
wire   [11:0] w3_V_14_q0;
wire   [3:0] w3_V_15_address0;
reg    w3_V_15_ce0;
wire   [9:0] w3_V_15_q0;
wire   [3:0] w3_V_16_address0;
reg    w3_V_16_ce0;
wire   [11:0] w3_V_16_q0;
wire   [3:0] w3_V_17_address0;
reg    w3_V_17_ce0;
wire   [9:0] w3_V_17_q0;
wire   [3:0] w3_V_18_address0;
reg    w3_V_18_ce0;
wire   [10:0] w3_V_18_q0;
wire   [3:0] w3_V_19_address0;
reg    w3_V_19_ce0;
wire   [9:0] w3_V_19_q0;
wire   [3:0] w3_V_20_address0;
reg    w3_V_20_ce0;
wire   [10:0] w3_V_20_q0;
wire   [3:0] w3_V_21_address0;
reg    w3_V_21_ce0;
wire   [10:0] w3_V_21_q0;
wire   [3:0] w3_V_22_address0;
reg    w3_V_22_ce0;
wire   [10:0] w3_V_22_q0;
wire   [3:0] w3_V_23_address0;
reg    w3_V_23_ce0;
wire   [12:0] w3_V_23_q0;
wire   [3:0] w3_V_24_address0;
reg    w3_V_24_ce0;
wire   [11:0] w3_V_24_q0;
wire   [3:0] w3_V_25_address0;
reg    w3_V_25_ce0;
wire   [11:0] w3_V_25_q0;
wire   [3:0] w3_V_26_address0;
reg    w3_V_26_ce0;
wire   [9:0] w3_V_26_q0;
wire   [3:0] w3_V_27_address0;
reg    w3_V_27_ce0;
wire   [10:0] w3_V_27_q0;
wire   [3:0] w3_V_28_address0;
reg    w3_V_28_ce0;
wire   [9:0] w3_V_28_q0;
wire   [3:0] w3_V_29_address0;
reg    w3_V_29_ce0;
wire   [10:0] w3_V_29_q0;
wire   [3:0] w3_V_30_address0;
reg    w3_V_30_ce0;
wire   [9:0] w3_V_30_q0;
wire   [3:0] w3_V_31_address0;
reg    w3_V_31_ce0;
wire   [12:0] w3_V_31_q0;
wire   [26:0] output_15_V_read_ca_fu_1324_p1;
reg   [26:0] output_15_V_read_ca_reg_3414;
wire   [26:0] output_14_V_read_ca_fu_1328_p1;
reg   [26:0] output_14_V_read_ca_reg_3419;
wire   [26:0] output_13_V_read_ca_fu_1332_p1;
reg   [26:0] output_13_V_read_ca_reg_3424;
wire   [26:0] output_12_V_read_ca_fu_1336_p1;
reg   [26:0] output_12_V_read_ca_reg_3429;
wire   [26:0] output_11_V_read_ca_fu_1340_p1;
reg   [26:0] output_11_V_read_ca_reg_3434;
wire   [26:0] output_10_V_read_ca_fu_1344_p1;
reg   [26:0] output_10_V_read_ca_reg_3439;
wire   [26:0] output_9_V_read_cas_fu_1348_p1;
reg   [26:0] output_9_V_read_cas_reg_3444;
wire   [26:0] output_8_V_read_cas_fu_1352_p1;
reg   [26:0] output_8_V_read_cas_reg_3449;
wire   [26:0] output_7_V_read_cas_fu_1356_p1;
reg   [26:0] output_7_V_read_cas_reg_3454;
wire   [26:0] output_6_V_read_cas_fu_1360_p1;
reg   [26:0] output_6_V_read_cas_reg_3459;
wire   [26:0] output_5_V_read_cas_fu_1364_p1;
reg   [26:0] output_5_V_read_cas_reg_3464;
wire   [26:0] output_4_V_read_cas_fu_1368_p1;
reg   [26:0] output_4_V_read_cas_reg_3469;
wire   [26:0] output_3_V_read_cas_fu_1372_p1;
reg   [26:0] output_3_V_read_cas_reg_3474;
wire   [26:0] output_2_V_read_cas_fu_1376_p1;
reg   [26:0] output_2_V_read_cas_reg_3479;
wire   [26:0] output_1_V_read_cas_fu_1380_p1;
reg   [26:0] output_1_V_read_cas_reg_3484;
wire   [26:0] output_0_V_read_cas_fu_1384_p1;
reg   [26:0] output_0_V_read_cas_reg_3489;
wire   [36:0] zext_ln1192_fu_1408_p1;
reg   [36:0] zext_ln1192_reg_3494;
wire   [35:0] zext_ln1192_8_fu_1412_p1;
reg   [35:0] zext_ln1192_8_reg_3499;
wire   [36:0] zext_ln1192_9_fu_1416_p1;
reg   [36:0] zext_ln1192_9_reg_3504;
wire   [36:0] zext_ln1192_10_fu_1420_p1;
reg   [36:0] zext_ln1192_10_reg_3509;
wire   [36:0] zext_ln1192_11_fu_1424_p1;
reg   [36:0] zext_ln1192_11_reg_3514;
wire   [36:0] zext_ln1192_12_fu_1428_p1;
reg   [36:0] zext_ln1192_12_reg_3519;
wire   [35:0] zext_ln1192_13_fu_1432_p1;
reg   [35:0] zext_ln1192_13_reg_3524;
wire   [36:0] zext_ln1192_14_fu_1436_p1;
reg   [36:0] zext_ln1192_14_reg_3529;
wire   [35:0] zext_ln1192_15_fu_1440_p1;
reg   [35:0] zext_ln1192_15_reg_3534;
wire   [36:0] zext_ln1192_16_fu_1444_p1;
reg   [36:0] zext_ln1192_16_reg_3539;
wire   [36:0] zext_ln1192_17_fu_1448_p1;
reg   [36:0] zext_ln1192_17_reg_3544;
wire   [36:0] zext_ln1192_18_fu_1452_p1;
reg   [36:0] zext_ln1192_18_reg_3549;
wire   [35:0] zext_ln1192_19_fu_1456_p1;
reg   [35:0] zext_ln1192_19_reg_3554;
wire   [35:0] zext_ln1192_20_fu_1460_p1;
reg   [35:0] zext_ln1192_20_reg_3559;
wire   [36:0] zext_ln1192_21_fu_1464_p1;
reg   [36:0] zext_ln1192_21_reg_3564;
wire   [35:0] zext_ln1192_22_fu_1468_p1;
reg   [35:0] zext_ln1192_22_reg_3569;
wire   [36:0] zext_ln1192_23_fu_1472_p1;
reg   [36:0] zext_ln1192_23_reg_3574;
wire   [35:0] zext_ln1192_24_fu_1476_p1;
reg   [35:0] zext_ln1192_24_reg_3579;
wire   [36:0] zext_ln1192_25_fu_1480_p1;
reg   [36:0] zext_ln1192_25_reg_3584;
wire   [35:0] zext_ln1192_26_fu_1484_p1;
reg   [35:0] zext_ln1192_26_reg_3589;
wire   [36:0] zext_ln1192_27_fu_1488_p1;
reg   [36:0] zext_ln1192_27_reg_3594;
wire   [36:0] zext_ln1192_28_fu_1492_p1;
reg   [36:0] zext_ln1192_28_reg_3599;
wire   [36:0] zext_ln1192_29_fu_1496_p1;
reg   [36:0] zext_ln1192_29_reg_3604;
wire   [36:0] zext_ln1192_30_fu_1500_p1;
reg   [36:0] zext_ln1192_30_reg_3609;
wire   [36:0] zext_ln1192_31_fu_1504_p1;
reg   [36:0] zext_ln1192_31_reg_3614;
wire   [36:0] zext_ln1192_32_fu_1508_p1;
reg   [36:0] zext_ln1192_32_reg_3619;
wire   [35:0] zext_ln1192_33_fu_1512_p1;
reg   [35:0] zext_ln1192_33_reg_3624;
wire   [36:0] zext_ln1192_34_fu_1516_p1;
reg   [36:0] zext_ln1192_34_reg_3629;
wire   [35:0] zext_ln1116_fu_1520_p1;
reg   [35:0] zext_ln1116_reg_3634;
wire   [36:0] zext_ln1192_35_fu_1524_p1;
reg   [36:0] zext_ln1192_35_reg_3639;
wire   [35:0] zext_ln1192_36_fu_1528_p1;
reg   [35:0] zext_ln1192_36_reg_3644;
wire   [36:0] zext_ln1192_37_fu_1532_p1;
reg   [36:0] zext_ln1192_37_reg_3649;
reg   [6:0] mask_addr_reg_3654;
reg   [6:0] mask78_addr_reg_3659;
reg   [6:0] mask79_addr_reg_3664;
reg   [6:0] mask80_addr_reg_3669;
reg   [6:0] mask81_addr_reg_3674;
reg   [6:0] mask82_addr_reg_3679;
reg   [6:0] mask83_addr_reg_3684;
reg   [6:0] mask84_addr_reg_3689;
reg   [6:0] mask85_addr_reg_3694;
reg   [6:0] mask86_addr_reg_3699;
reg   [6:0] mask87_addr_reg_3704;
reg   [6:0] mask88_addr_reg_3709;
reg   [6:0] mask89_addr_reg_3714;
reg   [6:0] mask90_addr_reg_3719;
reg   [6:0] mask91_addr_reg_3724;
reg   [6:0] mask92_addr_reg_3729;
wire   [4:0] i_fu_1622_p2;
reg   [4:0] i_reg_3737;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln19_fu_1616_p2;
wire   [3:0] trunc_ln26_fu_1665_p1;
reg   [3:0] trunc_ln26_reg_3907;
reg   [14:0] sum_V_reg_3912;
wire    ap_CS_fsm_state3;
reg   [12:0] w3_V_0_load_reg_3917;
reg   [9:0] w3_V_1_load_reg_3922;
reg   [11:0] w3_V_2_load_reg_3927;
reg   [11:0] w3_V_3_load_reg_3932;
reg   [11:0] w3_V_4_load_reg_3937;
reg   [10:0] w3_V_5_load_reg_3942;
reg   [9:0] w3_V_6_load_reg_3947;
reg   [10:0] w3_V_7_load_reg_3952;
reg   [9:0] w3_V_8_load_reg_3957;
reg   [10:0] w3_V_9_load_reg_3962;
reg   [11:0] w3_V_10_load_reg_3967;
reg   [11:0] w3_V_11_load_reg_3972;
reg   [9:0] w3_V_12_load_reg_3977;
reg   [9:0] w3_V_13_load_reg_3982;
reg   [11:0] w3_V_14_load_reg_3987;
reg   [9:0] w3_V_15_load_reg_3992;
reg   [11:0] w3_V_16_load_reg_3997;
reg   [9:0] w3_V_17_load_reg_4002;
reg   [10:0] w3_V_18_load_reg_4007;
reg   [9:0] w3_V_19_load_reg_4012;
reg   [10:0] w3_V_20_load_reg_4017;
reg   [10:0] w3_V_21_load_reg_4022;
reg   [10:0] w3_V_22_load_reg_4027;
reg   [12:0] w3_V_23_load_reg_4032;
reg   [11:0] w3_V_24_load_reg_4037;
reg   [11:0] w3_V_25_load_reg_4042;
reg   [9:0] w3_V_26_load_reg_4047;
reg   [10:0] w3_V_27_load_reg_4052;
reg   [9:0] w3_V_28_load_reg_4057;
reg   [10:0] w3_V_29_load_reg_4062;
reg   [9:0] w3_V_30_load_reg_4067;
reg   [12:0] w3_V_31_load_reg_4072;
wire   [0:0] tmp_fu_1973_p18;
reg   [0:0] tmp_reg_4077;
wire   [36:0] mul_ln1192_fu_2013_p2;
reg   [36:0] mul_ln1192_reg_4082;
wire    ap_CS_fsm_state4;
wire   [35:0] mul_ln1192_46_fu_2021_p2;
reg   [35:0] mul_ln1192_46_reg_4087;
wire   [36:0] mul_ln1192_47_fu_2029_p2;
reg   [36:0] mul_ln1192_47_reg_4092;
wire   [36:0] mul_ln1192_48_fu_2037_p2;
reg   [36:0] mul_ln1192_48_reg_4097;
wire   [36:0] mul_ln1192_49_fu_2045_p2;
reg   [36:0] mul_ln1192_49_reg_4102;
wire   [36:0] mul_ln1192_50_fu_2053_p2;
reg   [36:0] mul_ln1192_50_reg_4107;
wire   [35:0] mul_ln1192_51_fu_2061_p2;
reg   [35:0] mul_ln1192_51_reg_4112;
wire   [36:0] mul_ln1192_52_fu_2069_p2;
reg   [36:0] mul_ln1192_52_reg_4117;
wire   [35:0] mul_ln1192_53_fu_2077_p2;
reg   [35:0] mul_ln1192_53_reg_4122;
wire   [36:0] mul_ln1192_54_fu_2085_p2;
reg   [36:0] mul_ln1192_54_reg_4127;
wire   [36:0] mul_ln1192_55_fu_2093_p2;
reg   [36:0] mul_ln1192_55_reg_4132;
wire   [36:0] mul_ln1192_56_fu_2101_p2;
reg   [36:0] mul_ln1192_56_reg_4137;
wire   [35:0] mul_ln1192_57_fu_2109_p2;
reg   [35:0] mul_ln1192_57_reg_4142;
wire   [35:0] mul_ln1192_58_fu_2117_p2;
reg   [35:0] mul_ln1192_58_reg_4147;
wire   [36:0] mul_ln1192_59_fu_2125_p2;
reg   [36:0] mul_ln1192_59_reg_4152;
wire   [35:0] mul_ln1192_60_fu_2133_p2;
reg   [35:0] mul_ln1192_60_reg_4157;
wire   [36:0] mul_ln1192_61_fu_2141_p2;
reg   [36:0] mul_ln1192_61_reg_4162;
wire   [35:0] mul_ln1192_62_fu_2149_p2;
reg   [35:0] mul_ln1192_62_reg_4167;
wire   [36:0] mul_ln1192_63_fu_2157_p2;
reg   [36:0] mul_ln1192_63_reg_4172;
wire   [35:0] mul_ln1192_64_fu_2165_p2;
reg   [35:0] mul_ln1192_64_reg_4177;
wire   [36:0] mul_ln1192_65_fu_2173_p2;
reg   [36:0] mul_ln1192_65_reg_4182;
wire   [36:0] mul_ln1192_66_fu_2181_p2;
reg   [36:0] mul_ln1192_66_reg_4187;
wire   [36:0] mul_ln1192_67_fu_2189_p2;
reg   [36:0] mul_ln1192_67_reg_4192;
wire   [36:0] mul_ln1192_68_fu_2197_p2;
reg   [36:0] mul_ln1192_68_reg_4197;
wire   [36:0] mul_ln1192_69_fu_2205_p2;
reg   [36:0] mul_ln1192_69_reg_4202;
wire   [36:0] mul_ln1192_70_fu_2213_p2;
reg   [36:0] mul_ln1192_70_reg_4207;
wire   [35:0] mul_ln1192_71_fu_2221_p2;
reg   [35:0] mul_ln1192_71_reg_4212;
wire   [36:0] mul_ln1192_72_fu_2229_p2;
reg   [36:0] mul_ln1192_72_reg_4217;
wire   [35:0] mul_ln1118_fu_2237_p2;
reg   [35:0] mul_ln1118_reg_4222;
wire   [36:0] mul_ln1192_73_fu_2245_p2;
reg   [36:0] mul_ln1192_73_reg_4227;
wire   [35:0] mul_ln1192_74_fu_2253_p2;
reg   [35:0] mul_ln1192_74_reg_4232;
wire   [36:0] mul_ln1192_75_fu_2261_p2;
reg   [36:0] mul_ln1192_75_reg_4237;
reg   [26:0] tmp_52_reg_4242;
wire    ap_CS_fsm_state5;
reg   [26:0] tmp_55_reg_4247;
wire    ap_CS_fsm_state6;
reg   [26:0] tmp_58_reg_4252;
wire    ap_CS_fsm_state7;
reg   [26:0] tmp_61_reg_4257;
wire    ap_CS_fsm_state8;
reg   [26:0] tmp_64_reg_4262;
wire    ap_CS_fsm_state9;
reg   [26:0] tmp_67_reg_4267;
wire    ap_CS_fsm_state10;
reg   [26:0] tmp_70_reg_4272;
wire    ap_CS_fsm_state11;
reg   [26:0] tmp_73_reg_4277;
wire    ap_CS_fsm_state12;
reg   [26:0] tmp_76_reg_4282;
wire    ap_CS_fsm_state13;
reg   [26:0] tmp_79_reg_4287;
wire    ap_CS_fsm_state14;
reg   [4:0] i_0_reg_1313;
wire    ap_CS_fsm_state15;
wire   [63:0] mask_offset_cast_fu_1388_p1;
wire   [63:0] zext_ln21_fu_1628_p1;
reg   [26:0] p_Val2_103_fu_270;
wire   [26:0] p_Val2_s_fu_3039_p3;
reg   [0:0] write_flag_0_fu_274;
reg   [0:0] write_flag78_0_fu_278;
reg   [26:0] p_Val2_104_fu_282;
reg   [26:0] p_Val2_105_fu_286;
reg   [0:0] write_flag75_0_fu_290;
reg   [26:0] p_Val2_106_fu_294;
reg   [0:0] write_flag35_0_fu_298;
reg   [0:0] write_flag72_0_fu_302;
reg   [26:0] p_Val2_107_fu_306;
reg   [26:0] p_Val2_108_fu_310;
reg   [0:0] write_flag69_0_fu_314;
reg   [26:0] p_Val2_109_fu_318;
reg   [0:0] write_flag39_0_fu_322;
reg   [0:0] write_flag66_0_fu_326;
reg   [26:0] p_Val2_110_fu_330;
reg   [26:0] p_Val2_111_fu_334;
reg   [0:0] write_flag63_0_fu_338;
reg   [26:0] p_Val2_112_fu_342;
reg   [0:0] write_flag42_0_fu_346;
reg   [0:0] write_flag60_0_fu_350;
reg   [26:0] p_Val2_113_fu_354;
reg   [26:0] p_Val2_114_fu_358;
reg   [0:0] write_flag57_0_fu_362;
reg   [26:0] p_Val2_115_fu_366;
reg   [0:0] write_flag45_0_fu_370;
reg   [0:0] write_flag54_0_fu_374;
reg   [26:0] p_Val2_116_fu_378;
reg   [26:0] p_Val2_117_fu_382;
reg   [0:0] write_flag51_0_fu_386;
reg   [26:0] p_Val2_118_fu_390;
reg   [0:0] write_flag48_0_fu_394;
wire   [26:0] select_ln28_fu_1765_p3;
wire   [26:0] select_ln28_95_fu_1772_p3;
wire   [26:0] select_ln28_96_fu_1779_p3;
wire   [26:0] select_ln28_97_fu_1786_p3;
wire   [26:0] select_ln28_98_fu_1793_p3;
wire   [26:0] select_ln28_99_fu_1800_p3;
wire   [26:0] select_ln28_100_fu_1807_p3;
wire   [26:0] select_ln28_101_fu_1814_p3;
wire   [26:0] select_ln28_102_fu_1821_p3;
wire   [26:0] select_ln28_103_fu_1828_p3;
wire   [26:0] select_ln28_104_fu_1835_p3;
wire   [26:0] select_ln28_105_fu_1842_p3;
wire   [26:0] select_ln28_106_fu_1849_p3;
wire   [26:0] select_ln28_107_fu_1856_p3;
wire   [26:0] select_ln28_108_fu_1863_p3;
wire   [26:0] select_ln28_109_fu_1870_p3;
wire  signed [12:0] mul_ln1192_fu_2013_p0;
wire   [25:0] mul_ln1192_fu_2013_p1;
wire  signed [9:0] mul_ln1192_46_fu_2021_p0;
wire   [25:0] mul_ln1192_46_fu_2021_p1;
wire  signed [11:0] mul_ln1192_47_fu_2029_p0;
wire   [25:0] mul_ln1192_47_fu_2029_p1;
wire  signed [11:0] mul_ln1192_48_fu_2037_p0;
wire   [25:0] mul_ln1192_48_fu_2037_p1;
wire  signed [11:0] mul_ln1192_49_fu_2045_p0;
wire   [25:0] mul_ln1192_49_fu_2045_p1;
wire  signed [10:0] mul_ln1192_50_fu_2053_p0;
wire   [25:0] mul_ln1192_50_fu_2053_p1;
wire  signed [9:0] mul_ln1192_51_fu_2061_p0;
wire   [25:0] mul_ln1192_51_fu_2061_p1;
wire  signed [10:0] mul_ln1192_52_fu_2069_p0;
wire   [25:0] mul_ln1192_52_fu_2069_p1;
wire  signed [9:0] mul_ln1192_53_fu_2077_p0;
wire   [25:0] mul_ln1192_53_fu_2077_p1;
wire  signed [10:0] mul_ln1192_54_fu_2085_p0;
wire   [25:0] mul_ln1192_54_fu_2085_p1;
wire  signed [11:0] mul_ln1192_55_fu_2093_p0;
wire   [25:0] mul_ln1192_55_fu_2093_p1;
wire  signed [11:0] mul_ln1192_56_fu_2101_p0;
wire   [25:0] mul_ln1192_56_fu_2101_p1;
wire  signed [9:0] mul_ln1192_57_fu_2109_p0;
wire   [25:0] mul_ln1192_57_fu_2109_p1;
wire  signed [9:0] mul_ln1192_58_fu_2117_p0;
wire   [25:0] mul_ln1192_58_fu_2117_p1;
wire  signed [11:0] mul_ln1192_59_fu_2125_p0;
wire   [25:0] mul_ln1192_59_fu_2125_p1;
wire  signed [9:0] mul_ln1192_60_fu_2133_p0;
wire   [25:0] mul_ln1192_60_fu_2133_p1;
wire  signed [11:0] mul_ln1192_61_fu_2141_p0;
wire   [25:0] mul_ln1192_61_fu_2141_p1;
wire  signed [9:0] mul_ln1192_62_fu_2149_p0;
wire   [25:0] mul_ln1192_62_fu_2149_p1;
wire  signed [10:0] mul_ln1192_63_fu_2157_p0;
wire   [25:0] mul_ln1192_63_fu_2157_p1;
wire  signed [9:0] mul_ln1192_64_fu_2165_p0;
wire   [25:0] mul_ln1192_64_fu_2165_p1;
wire  signed [10:0] mul_ln1192_65_fu_2173_p0;
wire   [25:0] mul_ln1192_65_fu_2173_p1;
wire  signed [10:0] mul_ln1192_66_fu_2181_p0;
wire   [25:0] mul_ln1192_66_fu_2181_p1;
wire  signed [10:0] mul_ln1192_67_fu_2189_p0;
wire   [25:0] mul_ln1192_67_fu_2189_p1;
wire  signed [12:0] mul_ln1192_68_fu_2197_p0;
wire   [25:0] mul_ln1192_68_fu_2197_p1;
wire  signed [11:0] mul_ln1192_69_fu_2205_p0;
wire   [25:0] mul_ln1192_69_fu_2205_p1;
wire  signed [11:0] mul_ln1192_70_fu_2213_p0;
wire   [25:0] mul_ln1192_70_fu_2213_p1;
wire  signed [9:0] mul_ln1192_71_fu_2221_p0;
wire   [25:0] mul_ln1192_71_fu_2221_p1;
wire  signed [10:0] mul_ln1192_72_fu_2229_p0;
wire   [25:0] mul_ln1192_72_fu_2229_p1;
wire   [9:0] mul_ln1118_fu_2237_p0;
wire   [25:0] mul_ln1118_fu_2237_p1;
wire  signed [10:0] mul_ln1192_73_fu_2245_p0;
wire   [25:0] mul_ln1192_73_fu_2245_p1;
wire  signed [9:0] mul_ln1192_74_fu_2253_p0;
wire   [25:0] mul_ln1192_74_fu_2253_p1;
wire  signed [12:0] mul_ln1192_75_fu_2261_p0;
wire   [25:0] mul_ln1192_75_fu_2261_p1;
wire   [24:0] shl_ln_fu_2266_p3;
wire  signed [36:0] sext_ln728_fu_2273_p1;
wire   [36:0] add_ln1192_fu_2277_p2;
wire   [26:0] tmp_s_fu_2285_p4;
wire   [36:0] shl_ln728_s_fu_2295_p3;
wire  signed [36:0] sext_ln1192_88_fu_2282_p1;
wire   [36:0] add_ln1192_55_fu_2303_p2;
wire   [26:0] tmp_51_fu_2309_p4;
wire   [36:0] shl_ln728_51_fu_2319_p3;
wire   [36:0] add_ln1192_56_fu_2327_p2;
wire   [36:0] shl_ln728_52_fu_2342_p3;
wire   [36:0] add_ln1192_57_fu_2349_p2;
wire   [26:0] tmp_53_fu_2354_p4;
wire   [36:0] shl_ln728_53_fu_2364_p3;
wire   [36:0] add_ln1192_58_fu_2372_p2;
wire   [26:0] tmp_54_fu_2377_p4;
wire   [36:0] shl_ln728_54_fu_2387_p3;
wire   [36:0] add_ln1192_59_fu_2395_p2;
wire   [36:0] shl_ln728_55_fu_2413_p3;
wire  signed [36:0] sext_ln1192_94_fu_2410_p1;
wire   [36:0] add_ln1192_60_fu_2420_p2;
wire   [26:0] tmp_56_fu_2426_p4;
wire   [36:0] shl_ln728_56_fu_2436_p3;
wire   [36:0] add_ln1192_61_fu_2444_p2;
wire   [26:0] tmp_57_fu_2452_p4;
wire   [36:0] shl_ln728_57_fu_2462_p3;
wire  signed [36:0] sext_ln1192_97_fu_2449_p1;
wire   [36:0] add_ln1192_62_fu_2470_p2;
wire   [36:0] shl_ln728_58_fu_2486_p3;
wire   [36:0] add_ln1192_63_fu_2493_p2;
wire   [26:0] tmp_59_fu_2498_p4;
wire   [36:0] shl_ln728_59_fu_2508_p3;
wire   [36:0] add_ln1192_64_fu_2516_p2;
wire   [26:0] tmp_60_fu_2521_p4;
wire   [36:0] shl_ln728_60_fu_2531_p3;
wire   [36:0] add_ln1192_65_fu_2539_p2;
wire   [36:0] shl_ln728_61_fu_2557_p3;
wire  signed [36:0] sext_ln1192_101_fu_2554_p1;
wire   [36:0] add_ln1192_66_fu_2564_p2;
wire   [26:0] tmp_62_fu_2573_p4;
wire   [36:0] shl_ln728_62_fu_2583_p3;
wire  signed [36:0] sext_ln1192_111_fu_2570_p1;
wire   [36:0] add_ln1192_67_fu_2591_p2;
wire   [26:0] tmp_63_fu_2597_p4;
wire   [36:0] shl_ln728_63_fu_2607_p3;
wire   [36:0] add_ln1192_68_fu_2615_p2;
wire   [36:0] shl_ln728_64_fu_2633_p3;
wire  signed [36:0] sext_ln1192_114_fu_2630_p1;
wire   [36:0] add_ln1192_69_fu_2640_p2;
wire   [26:0] tmp_65_fu_2646_p4;
wire   [36:0] shl_ln728_65_fu_2656_p3;
wire   [36:0] add_ln1192_70_fu_2664_p2;
wire   [26:0] tmp_66_fu_2672_p4;
wire   [36:0] shl_ln728_66_fu_2682_p3;
wire  signed [36:0] sext_ln1192_116_fu_2669_p1;
wire   [36:0] add_ln1192_71_fu_2690_p2;
wire   [36:0] shl_ln728_67_fu_2706_p3;
wire   [36:0] add_ln1192_72_fu_2713_p2;
wire   [26:0] tmp_68_fu_2721_p4;
wire   [36:0] shl_ln728_68_fu_2731_p3;
wire  signed [36:0] sext_ln1192_118_fu_2718_p1;
wire   [36:0] add_ln1192_73_fu_2739_p2;
wire   [26:0] tmp_69_fu_2745_p4;
wire   [36:0] shl_ln728_69_fu_2755_p3;
wire   [36:0] add_ln1192_74_fu_2763_p2;
wire   [36:0] shl_ln728_70_fu_2778_p3;
wire   [36:0] add_ln1192_75_fu_2785_p2;
wire   [26:0] tmp_71_fu_2790_p4;
wire   [36:0] shl_ln728_71_fu_2800_p3;
wire   [36:0] add_ln1192_76_fu_2808_p2;
wire   [26:0] tmp_72_fu_2813_p4;
wire   [36:0] shl_ln728_72_fu_2823_p3;
wire   [36:0] add_ln1192_77_fu_2831_p2;
wire   [36:0] shl_ln728_73_fu_2846_p3;
wire   [36:0] add_ln1192_78_fu_2853_p2;
wire   [26:0] tmp_74_fu_2858_p4;
wire   [36:0] shl_ln728_74_fu_2868_p3;
wire   [36:0] add_ln1192_79_fu_2876_p2;
wire   [26:0] tmp_75_fu_2884_p4;
wire   [36:0] shl_ln728_75_fu_2894_p3;
wire  signed [36:0] sext_ln1192_120_fu_2881_p1;
wire   [36:0] add_ln1192_80_fu_2902_p2;
wire   [36:0] shl_ln728_76_fu_2918_p3;
wire   [36:0] add_ln1192_81_fu_2925_p2;
wire   [26:0] tmp_77_fu_2930_p4;
wire   [36:0] shl_ln728_77_fu_2940_p3;
wire   [36:0] zext_ln1192_38_fu_2948_p1;
wire   [36:0] add_ln1192_82_fu_2951_p2;
wire   [26:0] tmp_78_fu_2957_p4;
wire   [36:0] shl_ln728_78_fu_2967_p3;
wire   [36:0] add_ln1192_83_fu_2975_p2;
wire   [36:0] shl_ln728_79_fu_2993_p3;
wire  signed [36:0] sext_ln1192_122_fu_2990_p1;
wire   [36:0] add_ln1192_84_fu_3000_p2;
wire   [26:0] tmp_80_fu_3006_p4;
wire   [36:0] shl_ln728_80_fu_3016_p3;
wire   [36:0] add_ln1192_85_fu_3024_p2;
wire   [26:0] trunc_ln708_s_fu_3029_p4;
reg   [14:0] ap_NS_fsm;
wire   [35:0] mul_ln1118_fu_2237_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
end

dense_lay_32_16_sbpm #(
    .DataWidth( 15 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
b3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b3_V_address0),
    .ce0(b3_V_ce0),
    .q0(b3_V_q0)
);

dense_lay_32_16_sbqm #(
    .DataWidth( 13 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_0_address0),
    .ce0(w3_V_0_ce0),
    .q0(w3_V_0_q0)
);

dense_lay_32_16_sbrm #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_1_address0),
    .ce0(w3_V_1_ce0),
    .q0(w3_V_1_q0)
);

dense_lay_32_16_sbsm #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_2_address0),
    .ce0(w3_V_2_ce0),
    .q0(w3_V_2_q0)
);

dense_lay_32_16_sbtn #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_3_address0),
    .ce0(w3_V_3_ce0),
    .q0(w3_V_3_q0)
);

dense_lay_32_16_sbun #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_4_address0),
    .ce0(w3_V_4_ce0),
    .q0(w3_V_4_q0)
);

dense_lay_32_16_sbvn #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_5_address0),
    .ce0(w3_V_5_ce0),
    .q0(w3_V_5_q0)
);

dense_lay_32_16_sbwn #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_6_address0),
    .ce0(w3_V_6_ce0),
    .q0(w3_V_6_q0)
);

dense_lay_32_16_sbxn #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_7_address0),
    .ce0(w3_V_7_ce0),
    .q0(w3_V_7_q0)
);

dense_lay_32_16_sbyn #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_8_address0),
    .ce0(w3_V_8_ce0),
    .q0(w3_V_8_q0)
);

dense_lay_32_16_sbzo #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_9_address0),
    .ce0(w3_V_9_ce0),
    .q0(w3_V_9_q0)
);

dense_lay_32_16_sbAo #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_10_address0),
    .ce0(w3_V_10_ce0),
    .q0(w3_V_10_q0)
);

dense_lay_32_16_sbBo #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_11_address0),
    .ce0(w3_V_11_ce0),
    .q0(w3_V_11_q0)
);

dense_lay_32_16_sbCo #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_12_address0),
    .ce0(w3_V_12_ce0),
    .q0(w3_V_12_q0)
);

dense_lay_32_16_sbDo #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_13_address0),
    .ce0(w3_V_13_ce0),
    .q0(w3_V_13_q0)
);

dense_lay_32_16_sbEo #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_14_address0),
    .ce0(w3_V_14_ce0),
    .q0(w3_V_14_q0)
);

dense_lay_32_16_sbFp #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_15_address0),
    .ce0(w3_V_15_ce0),
    .q0(w3_V_15_q0)
);

dense_lay_32_16_sbGp #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_16_address0),
    .ce0(w3_V_16_ce0),
    .q0(w3_V_16_q0)
);

dense_lay_32_16_sbHp #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_17_address0),
    .ce0(w3_V_17_ce0),
    .q0(w3_V_17_q0)
);

dense_lay_32_16_sbIp #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_18_address0),
    .ce0(w3_V_18_ce0),
    .q0(w3_V_18_q0)
);

dense_lay_32_16_sbJp #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_19_address0),
    .ce0(w3_V_19_ce0),
    .q0(w3_V_19_q0)
);

dense_lay_32_16_sbKp #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_20_address0),
    .ce0(w3_V_20_ce0),
    .q0(w3_V_20_q0)
);

dense_lay_32_16_sbLp #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_21_address0),
    .ce0(w3_V_21_ce0),
    .q0(w3_V_21_q0)
);

dense_lay_32_16_sbMq #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_22_address0),
    .ce0(w3_V_22_ce0),
    .q0(w3_V_22_q0)
);

dense_lay_32_16_sbNq #(
    .DataWidth( 13 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_23_address0),
    .ce0(w3_V_23_ce0),
    .q0(w3_V_23_q0)
);

dense_lay_32_16_sbOq #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_24_address0),
    .ce0(w3_V_24_ce0),
    .q0(w3_V_24_q0)
);

dense_lay_32_16_sbPq #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_25_address0),
    .ce0(w3_V_25_ce0),
    .q0(w3_V_25_q0)
);

dense_lay_32_16_sbQq #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_26_address0),
    .ce0(w3_V_26_ce0),
    .q0(w3_V_26_q0)
);

dense_lay_32_16_sbRq #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_27_address0),
    .ce0(w3_V_27_ce0),
    .q0(w3_V_27_q0)
);

dense_lay_32_16_sbSr #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_28_address0),
    .ce0(w3_V_28_ce0),
    .q0(w3_V_28_q0)
);

dense_lay_32_16_sbTr #(
    .DataWidth( 11 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_29_address0),
    .ce0(w3_V_29_ce0),
    .q0(w3_V_29_q0)
);

dense_lay_32_16_sbUr #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_30_address0),
    .ce0(w3_V_30_ce0),
    .q0(w3_V_30_q0)
);

dense_lay_32_16_sbVr #(
    .DataWidth( 13 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
w3_V_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w3_V_31_address0),
    .ce0(w3_V_31_ce0),
    .q0(w3_V_31_q0)
);

dut_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
dut_mux_164_1_1_1_U529(
    .din0(mask_q0),
    .din1(mask78_q0),
    .din2(mask79_q0),
    .din3(mask80_q0),
    .din4(mask81_q0),
    .din5(mask82_q0),
    .din6(mask83_q0),
    .din7(mask84_q0),
    .din8(mask85_q0),
    .din9(mask86_q0),
    .din10(mask87_q0),
    .din11(mask88_q0),
    .din12(mask89_q0),
    .din13(mask90_q0),
    .din14(mask91_q0),
    .din15(mask92_q0),
    .din16(trunc_ln26_reg_3907),
    .dout(tmp_fu_1973_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        i_0_reg_1313 <= i_reg_3737;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_1313 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag35_0_fu_298 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag35_0_fu_298 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd2) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag39_0_fu_322 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag39_0_fu_322 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd3) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag42_0_fu_346 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag42_0_fu_346 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd4) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag45_0_fu_370 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag45_0_fu_370 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd5) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag48_0_fu_394 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag48_0_fu_394 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd6) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag51_0_fu_386 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag51_0_fu_386 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd7) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag54_0_fu_374 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag54_0_fu_374 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd8) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag57_0_fu_362 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag57_0_fu_362 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd9) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag60_0_fu_350 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag60_0_fu_350 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd10) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag63_0_fu_338 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag63_0_fu_338 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd11) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag66_0_fu_326 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag66_0_fu_326 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd12) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag69_0_fu_314 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag69_0_fu_314 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd13) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag72_0_fu_302 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag72_0_fu_302 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd14) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag75_0_fu_290 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag75_0_fu_290 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd15) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag78_0_fu_278 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag78_0_fu_278 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        write_flag_0_fu_274 <= 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_flag_0_fu_274 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_3737 <= i_fu_1622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        mask78_addr_reg_3659 <= mask_offset_cast_fu_1388_p1;
        mask79_addr_reg_3664 <= mask_offset_cast_fu_1388_p1;
        mask80_addr_reg_3669 <= mask_offset_cast_fu_1388_p1;
        mask81_addr_reg_3674 <= mask_offset_cast_fu_1388_p1;
        mask82_addr_reg_3679 <= mask_offset_cast_fu_1388_p1;
        mask83_addr_reg_3684 <= mask_offset_cast_fu_1388_p1;
        mask84_addr_reg_3689 <= mask_offset_cast_fu_1388_p1;
        mask85_addr_reg_3694 <= mask_offset_cast_fu_1388_p1;
        mask86_addr_reg_3699 <= mask_offset_cast_fu_1388_p1;
        mask87_addr_reg_3704 <= mask_offset_cast_fu_1388_p1;
        mask88_addr_reg_3709 <= mask_offset_cast_fu_1388_p1;
        mask89_addr_reg_3714 <= mask_offset_cast_fu_1388_p1;
        mask90_addr_reg_3719 <= mask_offset_cast_fu_1388_p1;
        mask91_addr_reg_3724 <= mask_offset_cast_fu_1388_p1;
        mask92_addr_reg_3729 <= mask_offset_cast_fu_1388_p1;
        mask_addr_reg_3654 <= mask_offset_cast_fu_1388_p1;
        output_0_V_read_cas_reg_3489[25 : 0] <= output_0_V_read_cas_fu_1384_p1[25 : 0];
        output_10_V_read_ca_reg_3439[25 : 0] <= output_10_V_read_ca_fu_1344_p1[25 : 0];
        output_11_V_read_ca_reg_3434[25 : 0] <= output_11_V_read_ca_fu_1340_p1[25 : 0];
        output_12_V_read_ca_reg_3429[25 : 0] <= output_12_V_read_ca_fu_1336_p1[25 : 0];
        output_13_V_read_ca_reg_3424[25 : 0] <= output_13_V_read_ca_fu_1332_p1[25 : 0];
        output_14_V_read_ca_reg_3419[25 : 0] <= output_14_V_read_ca_fu_1328_p1[25 : 0];
        output_15_V_read_ca_reg_3414[25 : 0] <= output_15_V_read_ca_fu_1324_p1[25 : 0];
        output_1_V_read_cas_reg_3484[25 : 0] <= output_1_V_read_cas_fu_1380_p1[25 : 0];
        output_2_V_read_cas_reg_3479[25 : 0] <= output_2_V_read_cas_fu_1376_p1[25 : 0];
        output_3_V_read_cas_reg_3474[25 : 0] <= output_3_V_read_cas_fu_1372_p1[25 : 0];
        output_4_V_read_cas_reg_3469[25 : 0] <= output_4_V_read_cas_fu_1368_p1[25 : 0];
        output_5_V_read_cas_reg_3464[25 : 0] <= output_5_V_read_cas_fu_1364_p1[25 : 0];
        output_6_V_read_cas_reg_3459[25 : 0] <= output_6_V_read_cas_fu_1360_p1[25 : 0];
        output_7_V_read_cas_reg_3454[25 : 0] <= output_7_V_read_cas_fu_1356_p1[25 : 0];
        output_8_V_read_cas_reg_3449[25 : 0] <= output_8_V_read_cas_fu_1352_p1[25 : 0];
        output_9_V_read_cas_reg_3444[25 : 0] <= output_9_V_read_cas_fu_1348_p1[25 : 0];
        zext_ln1116_reg_3634[25 : 0] <= zext_ln1116_fu_1520_p1[25 : 0];
        zext_ln1192_10_reg_3509[25 : 0] <= zext_ln1192_10_fu_1420_p1[25 : 0];
        zext_ln1192_11_reg_3514[25 : 0] <= zext_ln1192_11_fu_1424_p1[25 : 0];
        zext_ln1192_12_reg_3519[25 : 0] <= zext_ln1192_12_fu_1428_p1[25 : 0];
        zext_ln1192_13_reg_3524[25 : 0] <= zext_ln1192_13_fu_1432_p1[25 : 0];
        zext_ln1192_14_reg_3529[25 : 0] <= zext_ln1192_14_fu_1436_p1[25 : 0];
        zext_ln1192_15_reg_3534[25 : 0] <= zext_ln1192_15_fu_1440_p1[25 : 0];
        zext_ln1192_16_reg_3539[25 : 0] <= zext_ln1192_16_fu_1444_p1[25 : 0];
        zext_ln1192_17_reg_3544[25 : 0] <= zext_ln1192_17_fu_1448_p1[25 : 0];
        zext_ln1192_18_reg_3549[25 : 0] <= zext_ln1192_18_fu_1452_p1[25 : 0];
        zext_ln1192_19_reg_3554[25 : 0] <= zext_ln1192_19_fu_1456_p1[25 : 0];
        zext_ln1192_20_reg_3559[25 : 0] <= zext_ln1192_20_fu_1460_p1[25 : 0];
        zext_ln1192_21_reg_3564[25 : 0] <= zext_ln1192_21_fu_1464_p1[25 : 0];
        zext_ln1192_22_reg_3569[25 : 0] <= zext_ln1192_22_fu_1468_p1[25 : 0];
        zext_ln1192_23_reg_3574[25 : 0] <= zext_ln1192_23_fu_1472_p1[25 : 0];
        zext_ln1192_24_reg_3579[25 : 0] <= zext_ln1192_24_fu_1476_p1[25 : 0];
        zext_ln1192_25_reg_3584[25 : 0] <= zext_ln1192_25_fu_1480_p1[25 : 0];
        zext_ln1192_26_reg_3589[25 : 0] <= zext_ln1192_26_fu_1484_p1[25 : 0];
        zext_ln1192_27_reg_3594[25 : 0] <= zext_ln1192_27_fu_1488_p1[25 : 0];
        zext_ln1192_28_reg_3599[25 : 0] <= zext_ln1192_28_fu_1492_p1[25 : 0];
        zext_ln1192_29_reg_3604[25 : 0] <= zext_ln1192_29_fu_1496_p1[25 : 0];
        zext_ln1192_30_reg_3609[25 : 0] <= zext_ln1192_30_fu_1500_p1[25 : 0];
        zext_ln1192_31_reg_3614[25 : 0] <= zext_ln1192_31_fu_1504_p1[25 : 0];
        zext_ln1192_32_reg_3619[25 : 0] <= zext_ln1192_32_fu_1508_p1[25 : 0];
        zext_ln1192_33_reg_3624[25 : 0] <= zext_ln1192_33_fu_1512_p1[25 : 0];
        zext_ln1192_34_reg_3629[25 : 0] <= zext_ln1192_34_fu_1516_p1[25 : 0];
        zext_ln1192_35_reg_3639[25 : 0] <= zext_ln1192_35_fu_1524_p1[25 : 0];
        zext_ln1192_36_reg_3644[25 : 0] <= zext_ln1192_36_fu_1528_p1[25 : 0];
        zext_ln1192_37_reg_3649[25 : 0] <= zext_ln1192_37_fu_1532_p1[25 : 0];
        zext_ln1192_8_reg_3499[25 : 0] <= zext_ln1192_8_fu_1412_p1[25 : 0];
        zext_ln1192_9_reg_3504[25 : 0] <= zext_ln1192_9_fu_1416_p1[25 : 0];
        zext_ln1192_reg_3494[25 : 0] <= zext_ln1192_fu_1408_p1[25 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        mul_ln1118_reg_4222 <= mul_ln1118_fu_2237_p2;
        mul_ln1192_46_reg_4087 <= mul_ln1192_46_fu_2021_p2;
        mul_ln1192_47_reg_4092 <= mul_ln1192_47_fu_2029_p2;
        mul_ln1192_48_reg_4097 <= mul_ln1192_48_fu_2037_p2;
        mul_ln1192_49_reg_4102 <= mul_ln1192_49_fu_2045_p2;
        mul_ln1192_50_reg_4107 <= mul_ln1192_50_fu_2053_p2;
        mul_ln1192_51_reg_4112 <= mul_ln1192_51_fu_2061_p2;
        mul_ln1192_52_reg_4117 <= mul_ln1192_52_fu_2069_p2;
        mul_ln1192_53_reg_4122 <= mul_ln1192_53_fu_2077_p2;
        mul_ln1192_54_reg_4127 <= mul_ln1192_54_fu_2085_p2;
        mul_ln1192_55_reg_4132 <= mul_ln1192_55_fu_2093_p2;
        mul_ln1192_56_reg_4137 <= mul_ln1192_56_fu_2101_p2;
        mul_ln1192_57_reg_4142 <= mul_ln1192_57_fu_2109_p2;
        mul_ln1192_58_reg_4147 <= mul_ln1192_58_fu_2117_p2;
        mul_ln1192_59_reg_4152 <= mul_ln1192_59_fu_2125_p2;
        mul_ln1192_60_reg_4157 <= mul_ln1192_60_fu_2133_p2;
        mul_ln1192_61_reg_4162 <= mul_ln1192_61_fu_2141_p2;
        mul_ln1192_62_reg_4167 <= mul_ln1192_62_fu_2149_p2;
        mul_ln1192_63_reg_4172 <= mul_ln1192_63_fu_2157_p2;
        mul_ln1192_64_reg_4177 <= mul_ln1192_64_fu_2165_p2;
        mul_ln1192_65_reg_4182 <= mul_ln1192_65_fu_2173_p2;
        mul_ln1192_66_reg_4187 <= mul_ln1192_66_fu_2181_p2;
        mul_ln1192_67_reg_4192 <= mul_ln1192_67_fu_2189_p2;
        mul_ln1192_68_reg_4197 <= mul_ln1192_68_fu_2197_p2;
        mul_ln1192_69_reg_4202 <= mul_ln1192_69_fu_2205_p2;
        mul_ln1192_70_reg_4207 <= mul_ln1192_70_fu_2213_p2;
        mul_ln1192_71_reg_4212 <= mul_ln1192_71_fu_2221_p2;
        mul_ln1192_72_reg_4217 <= mul_ln1192_72_fu_2229_p2;
        mul_ln1192_73_reg_4227 <= mul_ln1192_73_fu_2245_p2;
        mul_ln1192_74_reg_4232 <= mul_ln1192_74_fu_2253_p2;
        mul_ln1192_75_reg_4237 <= mul_ln1192_75_fu_2261_p2;
        mul_ln1192_reg_4082 <= mul_ln1192_fu_2013_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd15) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_103_fu_270 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd14) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_104_fu_282 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_105_fu_286 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd13) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_106_fu_294 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd12) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_107_fu_306 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_108_fu_310 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd11) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_109_fu_318 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd10) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_110_fu_330 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd2) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_111_fu_334 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd9) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_112_fu_342 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd8) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_113_fu_354 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd3) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_114_fu_358 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd7) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_115_fu_366 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd6) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_116_fu_378 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd4) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_117_fu_382 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln26_reg_3907 == 4'd5) & (1'b1 == ap_CS_fsm_state15))) begin
        p_Val2_118_fu_390 <= p_Val2_s_fu_3039_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sum_V_reg_3912 <= b3_V_q0;
        tmp_reg_4077 <= tmp_fu_1973_p18;
        w3_V_0_load_reg_3917 <= w3_V_0_q0;
        w3_V_10_load_reg_3967 <= w3_V_10_q0;
        w3_V_11_load_reg_3972 <= w3_V_11_q0;
        w3_V_12_load_reg_3977 <= w3_V_12_q0;
        w3_V_13_load_reg_3982 <= w3_V_13_q0;
        w3_V_14_load_reg_3987 <= w3_V_14_q0;
        w3_V_15_load_reg_3992 <= w3_V_15_q0;
        w3_V_16_load_reg_3997 <= w3_V_16_q0;
        w3_V_17_load_reg_4002 <= w3_V_17_q0;
        w3_V_18_load_reg_4007 <= w3_V_18_q0;
        w3_V_19_load_reg_4012 <= w3_V_19_q0;
        w3_V_1_load_reg_3922 <= w3_V_1_q0;
        w3_V_20_load_reg_4017 <= w3_V_20_q0;
        w3_V_21_load_reg_4022 <= w3_V_21_q0;
        w3_V_22_load_reg_4027 <= w3_V_22_q0;
        w3_V_23_load_reg_4032 <= w3_V_23_q0;
        w3_V_24_load_reg_4037 <= w3_V_24_q0;
        w3_V_25_load_reg_4042 <= w3_V_25_q0;
        w3_V_26_load_reg_4047 <= w3_V_26_q0;
        w3_V_27_load_reg_4052 <= w3_V_27_q0;
        w3_V_28_load_reg_4057 <= w3_V_28_q0;
        w3_V_29_load_reg_4062 <= w3_V_29_q0;
        w3_V_2_load_reg_3927 <= w3_V_2_q0;
        w3_V_30_load_reg_4067 <= w3_V_30_q0;
        w3_V_31_load_reg_4072 <= w3_V_31_q0;
        w3_V_3_load_reg_3932 <= w3_V_3_q0;
        w3_V_4_load_reg_3937 <= w3_V_4_q0;
        w3_V_5_load_reg_3942 <= w3_V_5_q0;
        w3_V_6_load_reg_3947 <= w3_V_6_q0;
        w3_V_7_load_reg_3952 <= w3_V_7_q0;
        w3_V_8_load_reg_3957 <= w3_V_8_q0;
        w3_V_9_load_reg_3962 <= w3_V_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_52_reg_4242 <= {{add_ln1192_56_fu_2327_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_55_reg_4247 <= {{add_ln1192_59_fu_2395_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_58_reg_4252 <= {{add_ln1192_62_fu_2470_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        tmp_61_reg_4257 <= {{add_ln1192_65_fu_2539_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        tmp_64_reg_4262 <= {{add_ln1192_68_fu_2615_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        tmp_67_reg_4267 <= {{add_ln1192_71_fu_2690_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        tmp_70_reg_4272 <= {{add_ln1192_74_fu_2763_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_73_reg_4277 <= {{add_ln1192_77_fu_2831_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        tmp_76_reg_4282 <= {{add_ln1192_80_fu_2902_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_4077 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        tmp_79_reg_4287 <= {{add_ln1192_83_fu_2975_p2[36:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln19_fu_1616_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln26_reg_3907 <= trunc_ln26_fu_1665_p1;
    end
end

always @ (*) begin
    if ((((icmp_ln19_fu_1616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln19_fu_1616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        b3_V_ce0 = 1'b1;
    end else begin
        b3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask78_ce0 = 1'b1;
    end else begin
        mask78_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask79_ce0 = 1'b1;
    end else begin
        mask79_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask80_ce0 = 1'b1;
    end else begin
        mask80_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask81_ce0 = 1'b1;
    end else begin
        mask81_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask82_ce0 = 1'b1;
    end else begin
        mask82_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask83_ce0 = 1'b1;
    end else begin
        mask83_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask84_ce0 = 1'b1;
    end else begin
        mask84_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask85_ce0 = 1'b1;
    end else begin
        mask85_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask86_ce0 = 1'b1;
    end else begin
        mask86_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask87_ce0 = 1'b1;
    end else begin
        mask87_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask88_ce0 = 1'b1;
    end else begin
        mask88_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask89_ce0 = 1'b1;
    end else begin
        mask89_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask90_ce0 = 1'b1;
    end else begin
        mask90_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask91_ce0 = 1'b1;
    end else begin
        mask91_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask92_ce0 = 1'b1;
    end else begin
        mask92_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mask_ce0 = 1'b1;
    end else begin
        mask_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_0_ce0 = 1'b1;
    end else begin
        w3_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_10_ce0 = 1'b1;
    end else begin
        w3_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_11_ce0 = 1'b1;
    end else begin
        w3_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_12_ce0 = 1'b1;
    end else begin
        w3_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_13_ce0 = 1'b1;
    end else begin
        w3_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_14_ce0 = 1'b1;
    end else begin
        w3_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_15_ce0 = 1'b1;
    end else begin
        w3_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_16_ce0 = 1'b1;
    end else begin
        w3_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_17_ce0 = 1'b1;
    end else begin
        w3_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_18_ce0 = 1'b1;
    end else begin
        w3_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_19_ce0 = 1'b1;
    end else begin
        w3_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_1_ce0 = 1'b1;
    end else begin
        w3_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_20_ce0 = 1'b1;
    end else begin
        w3_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_21_ce0 = 1'b1;
    end else begin
        w3_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_22_ce0 = 1'b1;
    end else begin
        w3_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_23_ce0 = 1'b1;
    end else begin
        w3_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_24_ce0 = 1'b1;
    end else begin
        w3_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_25_ce0 = 1'b1;
    end else begin
        w3_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_26_ce0 = 1'b1;
    end else begin
        w3_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_27_ce0 = 1'b1;
    end else begin
        w3_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_28_ce0 = 1'b1;
    end else begin
        w3_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_29_ce0 = 1'b1;
    end else begin
        w3_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_2_ce0 = 1'b1;
    end else begin
        w3_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_30_ce0 = 1'b1;
    end else begin
        w3_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_31_ce0 = 1'b1;
    end else begin
        w3_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_3_ce0 = 1'b1;
    end else begin
        w3_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_4_ce0 = 1'b1;
    end else begin
        w3_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_5_ce0 = 1'b1;
    end else begin
        w3_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_6_ce0 = 1'b1;
    end else begin
        w3_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_7_ce0 = 1'b1;
    end else begin
        w3_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_8_ce0 = 1'b1;
    end else begin
        w3_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        w3_V_9_ce0 = 1'b1;
    end else begin
        w3_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln19_fu_1616_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_55_fu_2303_p2 = ($signed(shl_ln728_s_fu_2295_p3) + $signed(sext_ln1192_88_fu_2282_p1));

assign add_ln1192_56_fu_2327_p2 = (shl_ln728_51_fu_2319_p3 + mul_ln1192_47_reg_4092);

assign add_ln1192_57_fu_2349_p2 = (shl_ln728_52_fu_2342_p3 + mul_ln1192_48_reg_4097);

assign add_ln1192_58_fu_2372_p2 = (shl_ln728_53_fu_2364_p3 + mul_ln1192_49_reg_4102);

assign add_ln1192_59_fu_2395_p2 = (shl_ln728_54_fu_2387_p3 + mul_ln1192_50_reg_4107);

assign add_ln1192_60_fu_2420_p2 = ($signed(shl_ln728_55_fu_2413_p3) + $signed(sext_ln1192_94_fu_2410_p1));

assign add_ln1192_61_fu_2444_p2 = (shl_ln728_56_fu_2436_p3 + mul_ln1192_52_reg_4117);

assign add_ln1192_62_fu_2470_p2 = ($signed(shl_ln728_57_fu_2462_p3) + $signed(sext_ln1192_97_fu_2449_p1));

assign add_ln1192_63_fu_2493_p2 = (shl_ln728_58_fu_2486_p3 + mul_ln1192_54_reg_4127);

assign add_ln1192_64_fu_2516_p2 = (shl_ln728_59_fu_2508_p3 + mul_ln1192_55_reg_4132);

assign add_ln1192_65_fu_2539_p2 = (shl_ln728_60_fu_2531_p3 + mul_ln1192_56_reg_4137);

assign add_ln1192_66_fu_2564_p2 = ($signed(shl_ln728_61_fu_2557_p3) + $signed(sext_ln1192_101_fu_2554_p1));

assign add_ln1192_67_fu_2591_p2 = ($signed(shl_ln728_62_fu_2583_p3) + $signed(sext_ln1192_111_fu_2570_p1));

assign add_ln1192_68_fu_2615_p2 = (shl_ln728_63_fu_2607_p3 + mul_ln1192_59_reg_4152);

assign add_ln1192_69_fu_2640_p2 = ($signed(shl_ln728_64_fu_2633_p3) + $signed(sext_ln1192_114_fu_2630_p1));

assign add_ln1192_70_fu_2664_p2 = (shl_ln728_65_fu_2656_p3 + mul_ln1192_61_reg_4162);

assign add_ln1192_71_fu_2690_p2 = ($signed(shl_ln728_66_fu_2682_p3) + $signed(sext_ln1192_116_fu_2669_p1));

assign add_ln1192_72_fu_2713_p2 = (shl_ln728_67_fu_2706_p3 + mul_ln1192_63_reg_4172);

assign add_ln1192_73_fu_2739_p2 = ($signed(shl_ln728_68_fu_2731_p3) + $signed(sext_ln1192_118_fu_2718_p1));

assign add_ln1192_74_fu_2763_p2 = (shl_ln728_69_fu_2755_p3 + mul_ln1192_65_reg_4182);

assign add_ln1192_75_fu_2785_p2 = (shl_ln728_70_fu_2778_p3 + mul_ln1192_66_reg_4187);

assign add_ln1192_76_fu_2808_p2 = (shl_ln728_71_fu_2800_p3 + mul_ln1192_67_reg_4192);

assign add_ln1192_77_fu_2831_p2 = (shl_ln728_72_fu_2823_p3 + mul_ln1192_68_reg_4197);

assign add_ln1192_78_fu_2853_p2 = (shl_ln728_73_fu_2846_p3 + mul_ln1192_69_reg_4202);

assign add_ln1192_79_fu_2876_p2 = (shl_ln728_74_fu_2868_p3 + mul_ln1192_70_reg_4207);

assign add_ln1192_80_fu_2902_p2 = ($signed(shl_ln728_75_fu_2894_p3) + $signed(sext_ln1192_120_fu_2881_p1));

assign add_ln1192_81_fu_2925_p2 = (shl_ln728_76_fu_2918_p3 + mul_ln1192_72_reg_4217);

assign add_ln1192_82_fu_2951_p2 = (shl_ln728_77_fu_2940_p3 + zext_ln1192_38_fu_2948_p1);

assign add_ln1192_83_fu_2975_p2 = (shl_ln728_78_fu_2967_p3 + mul_ln1192_73_reg_4227);

assign add_ln1192_84_fu_3000_p2 = ($signed(shl_ln728_79_fu_2993_p3) + $signed(sext_ln1192_122_fu_2990_p1));

assign add_ln1192_85_fu_3024_p2 = (shl_ln728_80_fu_3016_p3 + mul_ln1192_75_reg_4237);

assign add_ln1192_fu_2277_p2 = ($signed(sext_ln728_fu_2273_p1) + $signed(mul_ln1192_reg_4082));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return_0 = select_ln28_fu_1765_p3;

assign ap_return_1 = select_ln28_95_fu_1772_p3;

assign ap_return_10 = select_ln28_104_fu_1835_p3;

assign ap_return_11 = select_ln28_105_fu_1842_p3;

assign ap_return_12 = select_ln28_106_fu_1849_p3;

assign ap_return_13 = select_ln28_107_fu_1856_p3;

assign ap_return_14 = select_ln28_108_fu_1863_p3;

assign ap_return_15 = select_ln28_109_fu_1870_p3;

assign ap_return_2 = select_ln28_96_fu_1779_p3;

assign ap_return_3 = select_ln28_97_fu_1786_p3;

assign ap_return_4 = select_ln28_98_fu_1793_p3;

assign ap_return_5 = select_ln28_99_fu_1800_p3;

assign ap_return_6 = select_ln28_100_fu_1807_p3;

assign ap_return_7 = select_ln28_101_fu_1814_p3;

assign ap_return_8 = select_ln28_102_fu_1821_p3;

assign ap_return_9 = select_ln28_103_fu_1828_p3;

assign b3_V_address0 = zext_ln21_fu_1628_p1;

assign i_fu_1622_p2 = (i_0_reg_1313 + 5'd1);

assign icmp_ln19_fu_1616_p2 = ((i_0_reg_1313 == 5'd16) ? 1'b1 : 1'b0);

assign mask78_address0 = mask78_addr_reg_3659;

assign mask79_address0 = mask79_addr_reg_3664;

assign mask80_address0 = mask80_addr_reg_3669;

assign mask81_address0 = mask81_addr_reg_3674;

assign mask82_address0 = mask82_addr_reg_3679;

assign mask83_address0 = mask83_addr_reg_3684;

assign mask84_address0 = mask84_addr_reg_3689;

assign mask85_address0 = mask85_addr_reg_3694;

assign mask86_address0 = mask86_addr_reg_3699;

assign mask87_address0 = mask87_addr_reg_3704;

assign mask88_address0 = mask88_addr_reg_3709;

assign mask89_address0 = mask89_addr_reg_3714;

assign mask90_address0 = mask90_addr_reg_3719;

assign mask91_address0 = mask91_addr_reg_3724;

assign mask92_address0 = mask92_addr_reg_3729;

assign mask_address0 = mask_addr_reg_3654;

assign mask_offset_cast_fu_1388_p1 = mask_offset;

assign mul_ln1118_fu_2237_p0 = mul_ln1118_fu_2237_p00;

assign mul_ln1118_fu_2237_p00 = w3_V_28_load_reg_4057;

assign mul_ln1118_fu_2237_p1 = zext_ln1116_reg_3634;

assign mul_ln1118_fu_2237_p2 = (mul_ln1118_fu_2237_p0 * mul_ln1118_fu_2237_p1);

assign mul_ln1192_46_fu_2021_p0 = w3_V_1_load_reg_3922;

assign mul_ln1192_46_fu_2021_p1 = zext_ln1192_8_reg_3499;

assign mul_ln1192_46_fu_2021_p2 = ($signed(mul_ln1192_46_fu_2021_p0) * $signed({{1'b0}, {mul_ln1192_46_fu_2021_p1}}));

assign mul_ln1192_47_fu_2029_p0 = w3_V_2_load_reg_3927;

assign mul_ln1192_47_fu_2029_p1 = zext_ln1192_9_reg_3504;

assign mul_ln1192_47_fu_2029_p2 = ($signed(mul_ln1192_47_fu_2029_p0) * $signed({{1'b0}, {mul_ln1192_47_fu_2029_p1}}));

assign mul_ln1192_48_fu_2037_p0 = w3_V_3_load_reg_3932;

assign mul_ln1192_48_fu_2037_p1 = zext_ln1192_10_reg_3509;

assign mul_ln1192_48_fu_2037_p2 = ($signed(mul_ln1192_48_fu_2037_p0) * $signed({{1'b0}, {mul_ln1192_48_fu_2037_p1}}));

assign mul_ln1192_49_fu_2045_p0 = w3_V_4_load_reg_3937;

assign mul_ln1192_49_fu_2045_p1 = zext_ln1192_11_reg_3514;

assign mul_ln1192_49_fu_2045_p2 = ($signed(mul_ln1192_49_fu_2045_p0) * $signed({{1'b0}, {mul_ln1192_49_fu_2045_p1}}));

assign mul_ln1192_50_fu_2053_p0 = w3_V_5_load_reg_3942;

assign mul_ln1192_50_fu_2053_p1 = zext_ln1192_12_reg_3519;

assign mul_ln1192_50_fu_2053_p2 = ($signed(mul_ln1192_50_fu_2053_p0) * $signed({{1'b0}, {mul_ln1192_50_fu_2053_p1}}));

assign mul_ln1192_51_fu_2061_p0 = w3_V_6_load_reg_3947;

assign mul_ln1192_51_fu_2061_p1 = zext_ln1192_13_reg_3524;

assign mul_ln1192_51_fu_2061_p2 = ($signed(mul_ln1192_51_fu_2061_p0) * $signed({{1'b0}, {mul_ln1192_51_fu_2061_p1}}));

assign mul_ln1192_52_fu_2069_p0 = w3_V_7_load_reg_3952;

assign mul_ln1192_52_fu_2069_p1 = zext_ln1192_14_reg_3529;

assign mul_ln1192_52_fu_2069_p2 = ($signed(mul_ln1192_52_fu_2069_p0) * $signed({{1'b0}, {mul_ln1192_52_fu_2069_p1}}));

assign mul_ln1192_53_fu_2077_p0 = w3_V_8_load_reg_3957;

assign mul_ln1192_53_fu_2077_p1 = zext_ln1192_15_reg_3534;

assign mul_ln1192_53_fu_2077_p2 = ($signed(mul_ln1192_53_fu_2077_p0) * $signed({{1'b0}, {mul_ln1192_53_fu_2077_p1}}));

assign mul_ln1192_54_fu_2085_p0 = w3_V_9_load_reg_3962;

assign mul_ln1192_54_fu_2085_p1 = zext_ln1192_16_reg_3539;

assign mul_ln1192_54_fu_2085_p2 = ($signed(mul_ln1192_54_fu_2085_p0) * $signed({{1'b0}, {mul_ln1192_54_fu_2085_p1}}));

assign mul_ln1192_55_fu_2093_p0 = w3_V_10_load_reg_3967;

assign mul_ln1192_55_fu_2093_p1 = zext_ln1192_17_reg_3544;

assign mul_ln1192_55_fu_2093_p2 = ($signed(mul_ln1192_55_fu_2093_p0) * $signed({{1'b0}, {mul_ln1192_55_fu_2093_p1}}));

assign mul_ln1192_56_fu_2101_p0 = w3_V_11_load_reg_3972;

assign mul_ln1192_56_fu_2101_p1 = zext_ln1192_18_reg_3549;

assign mul_ln1192_56_fu_2101_p2 = ($signed(mul_ln1192_56_fu_2101_p0) * $signed({{1'b0}, {mul_ln1192_56_fu_2101_p1}}));

assign mul_ln1192_57_fu_2109_p0 = w3_V_12_load_reg_3977;

assign mul_ln1192_57_fu_2109_p1 = zext_ln1192_19_reg_3554;

assign mul_ln1192_57_fu_2109_p2 = ($signed(mul_ln1192_57_fu_2109_p0) * $signed({{1'b0}, {mul_ln1192_57_fu_2109_p1}}));

assign mul_ln1192_58_fu_2117_p0 = w3_V_13_load_reg_3982;

assign mul_ln1192_58_fu_2117_p1 = zext_ln1192_20_reg_3559;

assign mul_ln1192_58_fu_2117_p2 = ($signed(mul_ln1192_58_fu_2117_p0) * $signed({{1'b0}, {mul_ln1192_58_fu_2117_p1}}));

assign mul_ln1192_59_fu_2125_p0 = w3_V_14_load_reg_3987;

assign mul_ln1192_59_fu_2125_p1 = zext_ln1192_21_reg_3564;

assign mul_ln1192_59_fu_2125_p2 = ($signed(mul_ln1192_59_fu_2125_p0) * $signed({{1'b0}, {mul_ln1192_59_fu_2125_p1}}));

assign mul_ln1192_60_fu_2133_p0 = w3_V_15_load_reg_3992;

assign mul_ln1192_60_fu_2133_p1 = zext_ln1192_22_reg_3569;

assign mul_ln1192_60_fu_2133_p2 = ($signed(mul_ln1192_60_fu_2133_p0) * $signed({{1'b0}, {mul_ln1192_60_fu_2133_p1}}));

assign mul_ln1192_61_fu_2141_p0 = w3_V_16_load_reg_3997;

assign mul_ln1192_61_fu_2141_p1 = zext_ln1192_23_reg_3574;

assign mul_ln1192_61_fu_2141_p2 = ($signed(mul_ln1192_61_fu_2141_p0) * $signed({{1'b0}, {mul_ln1192_61_fu_2141_p1}}));

assign mul_ln1192_62_fu_2149_p0 = w3_V_17_load_reg_4002;

assign mul_ln1192_62_fu_2149_p1 = zext_ln1192_24_reg_3579;

assign mul_ln1192_62_fu_2149_p2 = ($signed(mul_ln1192_62_fu_2149_p0) * $signed({{1'b0}, {mul_ln1192_62_fu_2149_p1}}));

assign mul_ln1192_63_fu_2157_p0 = w3_V_18_load_reg_4007;

assign mul_ln1192_63_fu_2157_p1 = zext_ln1192_25_reg_3584;

assign mul_ln1192_63_fu_2157_p2 = ($signed(mul_ln1192_63_fu_2157_p0) * $signed({{1'b0}, {mul_ln1192_63_fu_2157_p1}}));

assign mul_ln1192_64_fu_2165_p0 = w3_V_19_load_reg_4012;

assign mul_ln1192_64_fu_2165_p1 = zext_ln1192_26_reg_3589;

assign mul_ln1192_64_fu_2165_p2 = ($signed(mul_ln1192_64_fu_2165_p0) * $signed({{1'b0}, {mul_ln1192_64_fu_2165_p1}}));

assign mul_ln1192_65_fu_2173_p0 = w3_V_20_load_reg_4017;

assign mul_ln1192_65_fu_2173_p1 = zext_ln1192_27_reg_3594;

assign mul_ln1192_65_fu_2173_p2 = ($signed(mul_ln1192_65_fu_2173_p0) * $signed({{1'b0}, {mul_ln1192_65_fu_2173_p1}}));

assign mul_ln1192_66_fu_2181_p0 = w3_V_21_load_reg_4022;

assign mul_ln1192_66_fu_2181_p1 = zext_ln1192_28_reg_3599;

assign mul_ln1192_66_fu_2181_p2 = ($signed(mul_ln1192_66_fu_2181_p0) * $signed({{1'b0}, {mul_ln1192_66_fu_2181_p1}}));

assign mul_ln1192_67_fu_2189_p0 = w3_V_22_load_reg_4027;

assign mul_ln1192_67_fu_2189_p1 = zext_ln1192_29_reg_3604;

assign mul_ln1192_67_fu_2189_p2 = ($signed(mul_ln1192_67_fu_2189_p0) * $signed({{1'b0}, {mul_ln1192_67_fu_2189_p1}}));

assign mul_ln1192_68_fu_2197_p0 = w3_V_23_load_reg_4032;

assign mul_ln1192_68_fu_2197_p1 = zext_ln1192_30_reg_3609;

assign mul_ln1192_68_fu_2197_p2 = ($signed(mul_ln1192_68_fu_2197_p0) * $signed({{1'b0}, {mul_ln1192_68_fu_2197_p1}}));

assign mul_ln1192_69_fu_2205_p0 = w3_V_24_load_reg_4037;

assign mul_ln1192_69_fu_2205_p1 = zext_ln1192_31_reg_3614;

assign mul_ln1192_69_fu_2205_p2 = ($signed(mul_ln1192_69_fu_2205_p0) * $signed({{1'b0}, {mul_ln1192_69_fu_2205_p1}}));

assign mul_ln1192_70_fu_2213_p0 = w3_V_25_load_reg_4042;

assign mul_ln1192_70_fu_2213_p1 = zext_ln1192_32_reg_3619;

assign mul_ln1192_70_fu_2213_p2 = ($signed(mul_ln1192_70_fu_2213_p0) * $signed({{1'b0}, {mul_ln1192_70_fu_2213_p1}}));

assign mul_ln1192_71_fu_2221_p0 = w3_V_26_load_reg_4047;

assign mul_ln1192_71_fu_2221_p1 = zext_ln1192_33_reg_3624;

assign mul_ln1192_71_fu_2221_p2 = ($signed(mul_ln1192_71_fu_2221_p0) * $signed({{1'b0}, {mul_ln1192_71_fu_2221_p1}}));

assign mul_ln1192_72_fu_2229_p0 = w3_V_27_load_reg_4052;

assign mul_ln1192_72_fu_2229_p1 = zext_ln1192_34_reg_3629;

assign mul_ln1192_72_fu_2229_p2 = ($signed(mul_ln1192_72_fu_2229_p0) * $signed({{1'b0}, {mul_ln1192_72_fu_2229_p1}}));

assign mul_ln1192_73_fu_2245_p0 = w3_V_29_load_reg_4062;

assign mul_ln1192_73_fu_2245_p1 = zext_ln1192_35_reg_3639;

assign mul_ln1192_73_fu_2245_p2 = ($signed(mul_ln1192_73_fu_2245_p0) * $signed({{1'b0}, {mul_ln1192_73_fu_2245_p1}}));

assign mul_ln1192_74_fu_2253_p0 = w3_V_30_load_reg_4067;

assign mul_ln1192_74_fu_2253_p1 = zext_ln1192_36_reg_3644;

assign mul_ln1192_74_fu_2253_p2 = ($signed(mul_ln1192_74_fu_2253_p0) * $signed({{1'b0}, {mul_ln1192_74_fu_2253_p1}}));

assign mul_ln1192_75_fu_2261_p0 = w3_V_31_load_reg_4072;

assign mul_ln1192_75_fu_2261_p1 = zext_ln1192_37_reg_3649;

assign mul_ln1192_75_fu_2261_p2 = ($signed(mul_ln1192_75_fu_2261_p0) * $signed({{1'b0}, {mul_ln1192_75_fu_2261_p1}}));

assign mul_ln1192_fu_2013_p0 = w3_V_0_load_reg_3917;

assign mul_ln1192_fu_2013_p1 = zext_ln1192_reg_3494;

assign mul_ln1192_fu_2013_p2 = ($signed(mul_ln1192_fu_2013_p0) * $signed({{1'b0}, {mul_ln1192_fu_2013_p1}}));

assign output_0_V_read_cas_fu_1384_p1 = output_0_V_read;

assign output_10_V_read_ca_fu_1344_p1 = output_10_V_read;

assign output_11_V_read_ca_fu_1340_p1 = output_11_V_read;

assign output_12_V_read_ca_fu_1336_p1 = output_12_V_read;

assign output_13_V_read_ca_fu_1332_p1 = output_13_V_read;

assign output_14_V_read_ca_fu_1328_p1 = output_14_V_read;

assign output_15_V_read_ca_fu_1324_p1 = output_15_V_read;

assign output_1_V_read_cas_fu_1380_p1 = output_1_V_read;

assign output_2_V_read_cas_fu_1376_p1 = output_2_V_read;

assign output_3_V_read_cas_fu_1372_p1 = output_3_V_read;

assign output_4_V_read_cas_fu_1368_p1 = output_4_V_read;

assign output_5_V_read_cas_fu_1364_p1 = output_5_V_read;

assign output_6_V_read_cas_fu_1360_p1 = output_6_V_read;

assign output_7_V_read_cas_fu_1356_p1 = output_7_V_read;

assign output_8_V_read_cas_fu_1352_p1 = output_8_V_read;

assign output_9_V_read_cas_fu_1348_p1 = output_9_V_read;

assign p_Val2_s_fu_3039_p3 = ((tmp_reg_4077[0:0] === 1'b1) ? trunc_ln708_s_fu_3029_p4 : 27'd0);

assign select_ln28_100_fu_1807_p3 = ((write_flag51_0_fu_386[0:0] === 1'b1) ? p_Val2_116_fu_378 : output_6_V_read_cas_reg_3459);

assign select_ln28_101_fu_1814_p3 = ((write_flag54_0_fu_374[0:0] === 1'b1) ? p_Val2_115_fu_366 : output_7_V_read_cas_reg_3454);

assign select_ln28_102_fu_1821_p3 = ((write_flag57_0_fu_362[0:0] === 1'b1) ? p_Val2_113_fu_354 : output_8_V_read_cas_reg_3449);

assign select_ln28_103_fu_1828_p3 = ((write_flag60_0_fu_350[0:0] === 1'b1) ? p_Val2_112_fu_342 : output_9_V_read_cas_reg_3444);

assign select_ln28_104_fu_1835_p3 = ((write_flag63_0_fu_338[0:0] === 1'b1) ? p_Val2_110_fu_330 : output_10_V_read_ca_reg_3439);

assign select_ln28_105_fu_1842_p3 = ((write_flag66_0_fu_326[0:0] === 1'b1) ? p_Val2_109_fu_318 : output_11_V_read_ca_reg_3434);

assign select_ln28_106_fu_1849_p3 = ((write_flag69_0_fu_314[0:0] === 1'b1) ? p_Val2_107_fu_306 : output_12_V_read_ca_reg_3429);

assign select_ln28_107_fu_1856_p3 = ((write_flag72_0_fu_302[0:0] === 1'b1) ? p_Val2_106_fu_294 : output_13_V_read_ca_reg_3424);

assign select_ln28_108_fu_1863_p3 = ((write_flag75_0_fu_290[0:0] === 1'b1) ? p_Val2_104_fu_282 : output_14_V_read_ca_reg_3419);

assign select_ln28_109_fu_1870_p3 = ((write_flag78_0_fu_278[0:0] === 1'b1) ? p_Val2_103_fu_270 : output_15_V_read_ca_reg_3414);

assign select_ln28_95_fu_1772_p3 = ((write_flag35_0_fu_298[0:0] === 1'b1) ? p_Val2_108_fu_310 : output_1_V_read_cas_reg_3484);

assign select_ln28_96_fu_1779_p3 = ((write_flag39_0_fu_322[0:0] === 1'b1) ? p_Val2_111_fu_334 : output_2_V_read_cas_reg_3479);

assign select_ln28_97_fu_1786_p3 = ((write_flag42_0_fu_346[0:0] === 1'b1) ? p_Val2_114_fu_358 : output_3_V_read_cas_reg_3474);

assign select_ln28_98_fu_1793_p3 = ((write_flag45_0_fu_370[0:0] === 1'b1) ? p_Val2_117_fu_382 : output_4_V_read_cas_reg_3469);

assign select_ln28_99_fu_1800_p3 = ((write_flag48_0_fu_394[0:0] === 1'b1) ? p_Val2_118_fu_390 : output_5_V_read_cas_reg_3464);

assign select_ln28_fu_1765_p3 = ((write_flag_0_fu_274[0:0] === 1'b1) ? p_Val2_105_fu_286 : output_0_V_read_cas_reg_3489);

assign sext_ln1192_101_fu_2554_p1 = $signed(mul_ln1192_57_reg_4142);

assign sext_ln1192_111_fu_2570_p1 = $signed(mul_ln1192_58_reg_4147);

assign sext_ln1192_114_fu_2630_p1 = $signed(mul_ln1192_60_reg_4157);

assign sext_ln1192_116_fu_2669_p1 = $signed(mul_ln1192_62_reg_4167);

assign sext_ln1192_118_fu_2718_p1 = $signed(mul_ln1192_64_reg_4177);

assign sext_ln1192_120_fu_2881_p1 = $signed(mul_ln1192_71_reg_4212);

assign sext_ln1192_122_fu_2990_p1 = $signed(mul_ln1192_74_reg_4232);

assign sext_ln1192_88_fu_2282_p1 = $signed(mul_ln1192_46_reg_4087);

assign sext_ln1192_94_fu_2410_p1 = $signed(mul_ln1192_51_reg_4112);

assign sext_ln1192_97_fu_2449_p1 = $signed(mul_ln1192_53_reg_4122);

assign sext_ln728_fu_2273_p1 = $signed(shl_ln_fu_2266_p3);

assign shl_ln728_51_fu_2319_p3 = {{tmp_51_fu_2309_p4}, {10'd0}};

assign shl_ln728_52_fu_2342_p3 = {{tmp_52_reg_4242}, {10'd0}};

assign shl_ln728_53_fu_2364_p3 = {{tmp_53_fu_2354_p4}, {10'd0}};

assign shl_ln728_54_fu_2387_p3 = {{tmp_54_fu_2377_p4}, {10'd0}};

assign shl_ln728_55_fu_2413_p3 = {{tmp_55_reg_4247}, {10'd0}};

assign shl_ln728_56_fu_2436_p3 = {{tmp_56_fu_2426_p4}, {10'd0}};

assign shl_ln728_57_fu_2462_p3 = {{tmp_57_fu_2452_p4}, {10'd0}};

assign shl_ln728_58_fu_2486_p3 = {{tmp_58_reg_4252}, {10'd0}};

assign shl_ln728_59_fu_2508_p3 = {{tmp_59_fu_2498_p4}, {10'd0}};

assign shl_ln728_60_fu_2531_p3 = {{tmp_60_fu_2521_p4}, {10'd0}};

assign shl_ln728_61_fu_2557_p3 = {{tmp_61_reg_4257}, {10'd0}};

assign shl_ln728_62_fu_2583_p3 = {{tmp_62_fu_2573_p4}, {10'd0}};

assign shl_ln728_63_fu_2607_p3 = {{tmp_63_fu_2597_p4}, {10'd0}};

assign shl_ln728_64_fu_2633_p3 = {{tmp_64_reg_4262}, {10'd0}};

assign shl_ln728_65_fu_2656_p3 = {{tmp_65_fu_2646_p4}, {10'd0}};

assign shl_ln728_66_fu_2682_p3 = {{tmp_66_fu_2672_p4}, {10'd0}};

assign shl_ln728_67_fu_2706_p3 = {{tmp_67_reg_4267}, {10'd0}};

assign shl_ln728_68_fu_2731_p3 = {{tmp_68_fu_2721_p4}, {10'd0}};

assign shl_ln728_69_fu_2755_p3 = {{tmp_69_fu_2745_p4}, {10'd0}};

assign shl_ln728_70_fu_2778_p3 = {{tmp_70_reg_4272}, {10'd0}};

assign shl_ln728_71_fu_2800_p3 = {{tmp_71_fu_2790_p4}, {10'd0}};

assign shl_ln728_72_fu_2823_p3 = {{tmp_72_fu_2813_p4}, {10'd0}};

assign shl_ln728_73_fu_2846_p3 = {{tmp_73_reg_4277}, {10'd0}};

assign shl_ln728_74_fu_2868_p3 = {{tmp_74_fu_2858_p4}, {10'd0}};

assign shl_ln728_75_fu_2894_p3 = {{tmp_75_fu_2884_p4}, {10'd0}};

assign shl_ln728_76_fu_2918_p3 = {{tmp_76_reg_4282}, {10'd0}};

assign shl_ln728_77_fu_2940_p3 = {{tmp_77_fu_2930_p4}, {10'd0}};

assign shl_ln728_78_fu_2967_p3 = {{tmp_78_fu_2957_p4}, {10'd0}};

assign shl_ln728_79_fu_2993_p3 = {{tmp_79_reg_4287}, {10'd0}};

assign shl_ln728_80_fu_3016_p3 = {{tmp_80_fu_3006_p4}, {10'd0}};

assign shl_ln728_s_fu_2295_p3 = {{tmp_s_fu_2285_p4}, {10'd0}};

assign shl_ln_fu_2266_p3 = {{sum_V_reg_3912}, {10'd0}};

assign tmp_51_fu_2309_p4 = {{add_ln1192_55_fu_2303_p2[36:10]}};

assign tmp_53_fu_2354_p4 = {{add_ln1192_57_fu_2349_p2[36:10]}};

assign tmp_54_fu_2377_p4 = {{add_ln1192_58_fu_2372_p2[36:10]}};

assign tmp_56_fu_2426_p4 = {{add_ln1192_60_fu_2420_p2[36:10]}};

assign tmp_57_fu_2452_p4 = {{add_ln1192_61_fu_2444_p2[36:10]}};

assign tmp_59_fu_2498_p4 = {{add_ln1192_63_fu_2493_p2[36:10]}};

assign tmp_60_fu_2521_p4 = {{add_ln1192_64_fu_2516_p2[36:10]}};

assign tmp_62_fu_2573_p4 = {{add_ln1192_66_fu_2564_p2[36:10]}};

assign tmp_63_fu_2597_p4 = {{add_ln1192_67_fu_2591_p2[36:10]}};

assign tmp_65_fu_2646_p4 = {{add_ln1192_69_fu_2640_p2[36:10]}};

assign tmp_66_fu_2672_p4 = {{add_ln1192_70_fu_2664_p2[36:10]}};

assign tmp_68_fu_2721_p4 = {{add_ln1192_72_fu_2713_p2[36:10]}};

assign tmp_69_fu_2745_p4 = {{add_ln1192_73_fu_2739_p2[36:10]}};

assign tmp_71_fu_2790_p4 = {{add_ln1192_75_fu_2785_p2[36:10]}};

assign tmp_72_fu_2813_p4 = {{add_ln1192_76_fu_2808_p2[36:10]}};

assign tmp_74_fu_2858_p4 = {{add_ln1192_78_fu_2853_p2[36:10]}};

assign tmp_75_fu_2884_p4 = {{add_ln1192_79_fu_2876_p2[36:10]}};

assign tmp_77_fu_2930_p4 = {{add_ln1192_81_fu_2925_p2[36:10]}};

assign tmp_78_fu_2957_p4 = {{add_ln1192_82_fu_2951_p2[36:10]}};

assign tmp_80_fu_3006_p4 = {{add_ln1192_84_fu_3000_p2[36:10]}};

assign tmp_s_fu_2285_p4 = {{add_ln1192_fu_2277_p2[36:10]}};

assign trunc_ln26_fu_1665_p1 = i_0_reg_1313[3:0];

assign trunc_ln708_s_fu_3029_p4 = {{add_ln1192_85_fu_3024_p2[36:10]}};

assign w3_V_0_address0 = zext_ln21_fu_1628_p1;

assign w3_V_10_address0 = zext_ln21_fu_1628_p1;

assign w3_V_11_address0 = zext_ln21_fu_1628_p1;

assign w3_V_12_address0 = zext_ln21_fu_1628_p1;

assign w3_V_13_address0 = zext_ln21_fu_1628_p1;

assign w3_V_14_address0 = zext_ln21_fu_1628_p1;

assign w3_V_15_address0 = zext_ln21_fu_1628_p1;

assign w3_V_16_address0 = zext_ln21_fu_1628_p1;

assign w3_V_17_address0 = zext_ln21_fu_1628_p1;

assign w3_V_18_address0 = zext_ln21_fu_1628_p1;

assign w3_V_19_address0 = zext_ln21_fu_1628_p1;

assign w3_V_1_address0 = zext_ln21_fu_1628_p1;

assign w3_V_20_address0 = zext_ln21_fu_1628_p1;

assign w3_V_21_address0 = zext_ln21_fu_1628_p1;

assign w3_V_22_address0 = zext_ln21_fu_1628_p1;

assign w3_V_23_address0 = zext_ln21_fu_1628_p1;

assign w3_V_24_address0 = zext_ln21_fu_1628_p1;

assign w3_V_25_address0 = zext_ln21_fu_1628_p1;

assign w3_V_26_address0 = zext_ln21_fu_1628_p1;

assign w3_V_27_address0 = zext_ln21_fu_1628_p1;

assign w3_V_28_address0 = zext_ln21_fu_1628_p1;

assign w3_V_29_address0 = zext_ln21_fu_1628_p1;

assign w3_V_2_address0 = zext_ln21_fu_1628_p1;

assign w3_V_30_address0 = zext_ln21_fu_1628_p1;

assign w3_V_31_address0 = zext_ln21_fu_1628_p1;

assign w3_V_3_address0 = zext_ln21_fu_1628_p1;

assign w3_V_4_address0 = zext_ln21_fu_1628_p1;

assign w3_V_5_address0 = zext_ln21_fu_1628_p1;

assign w3_V_6_address0 = zext_ln21_fu_1628_p1;

assign w3_V_7_address0 = zext_ln21_fu_1628_p1;

assign w3_V_8_address0 = zext_ln21_fu_1628_p1;

assign w3_V_9_address0 = zext_ln21_fu_1628_p1;

assign zext_ln1116_fu_1520_p1 = input_28_V_read;

assign zext_ln1192_10_fu_1420_p1 = input_3_V_read;

assign zext_ln1192_11_fu_1424_p1 = input_4_V_read;

assign zext_ln1192_12_fu_1428_p1 = input_5_V_read;

assign zext_ln1192_13_fu_1432_p1 = input_6_V_read;

assign zext_ln1192_14_fu_1436_p1 = input_7_V_read;

assign zext_ln1192_15_fu_1440_p1 = input_8_V_read;

assign zext_ln1192_16_fu_1444_p1 = input_9_V_read;

assign zext_ln1192_17_fu_1448_p1 = input_10_V_read;

assign zext_ln1192_18_fu_1452_p1 = input_11_V_read;

assign zext_ln1192_19_fu_1456_p1 = input_12_V_read;

assign zext_ln1192_20_fu_1460_p1 = input_13_V_read;

assign zext_ln1192_21_fu_1464_p1 = input_14_V_read;

assign zext_ln1192_22_fu_1468_p1 = input_15_V_read;

assign zext_ln1192_23_fu_1472_p1 = input_16_V_read;

assign zext_ln1192_24_fu_1476_p1 = input_17_V_read;

assign zext_ln1192_25_fu_1480_p1 = input_18_V_read;

assign zext_ln1192_26_fu_1484_p1 = input_19_V_read;

assign zext_ln1192_27_fu_1488_p1 = input_20_V_read;

assign zext_ln1192_28_fu_1492_p1 = input_21_V_read;

assign zext_ln1192_29_fu_1496_p1 = input_22_V_read;

assign zext_ln1192_30_fu_1500_p1 = input_23_V_read;

assign zext_ln1192_31_fu_1504_p1 = input_24_V_read;

assign zext_ln1192_32_fu_1508_p1 = input_25_V_read;

assign zext_ln1192_33_fu_1512_p1 = input_26_V_read;

assign zext_ln1192_34_fu_1516_p1 = input_27_V_read;

assign zext_ln1192_35_fu_1524_p1 = input_29_V_read;

assign zext_ln1192_36_fu_1528_p1 = input_30_V_read;

assign zext_ln1192_37_fu_1532_p1 = input_31_V_read;

assign zext_ln1192_38_fu_2948_p1 = mul_ln1118_reg_4222;

assign zext_ln1192_8_fu_1412_p1 = input_1_V_read;

assign zext_ln1192_9_fu_1416_p1 = input_2_V_read;

assign zext_ln1192_fu_1408_p1 = input_0_V_read;

assign zext_ln21_fu_1628_p1 = i_0_reg_1313;

always @ (posedge ap_clk) begin
    output_15_V_read_ca_reg_3414[26] <= 1'b0;
    output_14_V_read_ca_reg_3419[26] <= 1'b0;
    output_13_V_read_ca_reg_3424[26] <= 1'b0;
    output_12_V_read_ca_reg_3429[26] <= 1'b0;
    output_11_V_read_ca_reg_3434[26] <= 1'b0;
    output_10_V_read_ca_reg_3439[26] <= 1'b0;
    output_9_V_read_cas_reg_3444[26] <= 1'b0;
    output_8_V_read_cas_reg_3449[26] <= 1'b0;
    output_7_V_read_cas_reg_3454[26] <= 1'b0;
    output_6_V_read_cas_reg_3459[26] <= 1'b0;
    output_5_V_read_cas_reg_3464[26] <= 1'b0;
    output_4_V_read_cas_reg_3469[26] <= 1'b0;
    output_3_V_read_cas_reg_3474[26] <= 1'b0;
    output_2_V_read_cas_reg_3479[26] <= 1'b0;
    output_1_V_read_cas_reg_3484[26] <= 1'b0;
    output_0_V_read_cas_reg_3489[26] <= 1'b0;
    zext_ln1192_reg_3494[36:26] <= 11'b00000000000;
    zext_ln1192_8_reg_3499[35:26] <= 10'b0000000000;
    zext_ln1192_9_reg_3504[36:26] <= 11'b00000000000;
    zext_ln1192_10_reg_3509[36:26] <= 11'b00000000000;
    zext_ln1192_11_reg_3514[36:26] <= 11'b00000000000;
    zext_ln1192_12_reg_3519[36:26] <= 11'b00000000000;
    zext_ln1192_13_reg_3524[35:26] <= 10'b0000000000;
    zext_ln1192_14_reg_3529[36:26] <= 11'b00000000000;
    zext_ln1192_15_reg_3534[35:26] <= 10'b0000000000;
    zext_ln1192_16_reg_3539[36:26] <= 11'b00000000000;
    zext_ln1192_17_reg_3544[36:26] <= 11'b00000000000;
    zext_ln1192_18_reg_3549[36:26] <= 11'b00000000000;
    zext_ln1192_19_reg_3554[35:26] <= 10'b0000000000;
    zext_ln1192_20_reg_3559[35:26] <= 10'b0000000000;
    zext_ln1192_21_reg_3564[36:26] <= 11'b00000000000;
    zext_ln1192_22_reg_3569[35:26] <= 10'b0000000000;
    zext_ln1192_23_reg_3574[36:26] <= 11'b00000000000;
    zext_ln1192_24_reg_3579[35:26] <= 10'b0000000000;
    zext_ln1192_25_reg_3584[36:26] <= 11'b00000000000;
    zext_ln1192_26_reg_3589[35:26] <= 10'b0000000000;
    zext_ln1192_27_reg_3594[36:26] <= 11'b00000000000;
    zext_ln1192_28_reg_3599[36:26] <= 11'b00000000000;
    zext_ln1192_29_reg_3604[36:26] <= 11'b00000000000;
    zext_ln1192_30_reg_3609[36:26] <= 11'b00000000000;
    zext_ln1192_31_reg_3614[36:26] <= 11'b00000000000;
    zext_ln1192_32_reg_3619[36:26] <= 11'b00000000000;
    zext_ln1192_33_reg_3624[35:26] <= 10'b0000000000;
    zext_ln1192_34_reg_3629[36:26] <= 11'b00000000000;
    zext_ln1116_reg_3634[35:26] <= 10'b0000000000;
    zext_ln1192_35_reg_3639[36:26] <= 11'b00000000000;
    zext_ln1192_36_reg_3644[35:26] <= 10'b0000000000;
    zext_ln1192_37_reg_3649[36:26] <= 11'b00000000000;
end

endmodule //dense_lay_32_16_s
